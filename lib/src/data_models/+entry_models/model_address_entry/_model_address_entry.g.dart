//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: empty_constructor_bodies
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_this

part of 'model_address_entry.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class ModelAddressEntry extends _ModelAddressEntry {
  //
  //
  //

  static const K_REF = 'ref';
  static const K_ID = 'id';
  static const K_TITLE = 'title';
  static const K_TITLE_SEARCHABLE = 'titleSearchable';
  static const K_DESCRIPTION = 'description';
  static const K_CREATED_AT = 'createdAt';
  static const K_CREATED_BY = 'createdBy';
  static const K_DELETED_AT = 'deletedAt';
  static const K_DELETED_BY = 'deletedBy';
  static const K_MODIFIED_AT = 'modifiedAt';
  static const K_MODIFIED_BY = 'modifiedBy';
  static const K_ADDRESS_LINE_1 = 'addressLine1';
  static const K_ADDRESS_LINE_2 = 'addressLine2';
  static const K_CITY = 'city';
  static const K_STATE_OR_PROVINCE = 'stateOrProvince';
  static const K_POSTAL_CODE = 'postalCode';
  static const K_COUNTRY = 'country';

  static const CLASS = 'ModelAddressEntry';

  @override
  String get $class => CLASS;

  DataRefModel? ref;
  String? id;
  String? title;
  String? titleSearchable;
  String? description;
  DateTime? createdAt;
  String? createdBy;
  DateTime? deletedAt;
  String? deletedBy;
  DateTime? modifiedAt;
  String? modifiedBy;
  String? addressLine1;
  String? addressLine2;
  String? city;
  String? stateOrProvince;
  String? postalCode;
  String? country;

  //
  //
  //

  ModelAddressEntry.empty();

  //
  //
  //

  factory ModelAddressEntry({
    required DataRefModel ref,
    String? id,
    String? title,
    String? titleSearchable,
    String? description,
    DateTime? createdAt,
    String? createdBy,
    DateTime? deletedAt,
    String? deletedBy,
    DateTime? modifiedAt,
    String? modifiedBy,
    String? addressLine1,
    String? addressLine2,
    String? city,
    String? stateOrProvince,
    String? postalCode,
    String? country,
  }) {
    return ModelAddressEntry.b(
      ref: ref,
      id: id,
      title: title,
      titleSearchable: titleSearchable,
      description: description,
      createdAt: createdAt,
      createdBy: createdBy,
      deletedAt: deletedAt,
      deletedBy: deletedBy,
      modifiedAt: modifiedAt,
      modifiedBy: modifiedBy,
      addressLine1: addressLine1,
      addressLine2: addressLine2,
      city: city,
      stateOrProvince: stateOrProvince,
      postalCode: postalCode,
      country: country,
    );
  }

  //
  //
  //

  ModelAddressEntry.b({
    this.ref,
    this.id,
    this.title,
    this.titleSearchable,
    this.description,
    this.createdAt,
    this.createdBy,
    this.deletedAt,
    this.deletedBy,
    this.modifiedAt,
    this.modifiedBy,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.stateOrProvince,
    this.postalCode,
    this.country,
  }) {
    assert(this.id != null);
    assert(this.title != null);
    assert(this.titleSearchable != null);
    assert(this.description != null);
    assert(this.createdAt != null);
    assert(this.createdBy != null);
    assert(this.deletedAt != null);
    assert(this.deletedBy != null);
    assert(this.modifiedAt != null);
    assert(this.modifiedBy != null);
    assert(this.addressLine1 != null);
    assert(this.addressLine2 != null);
    assert(this.city != null);
    assert(this.stateOrProvince != null);
    assert(this.postalCode != null);
    assert(this.country != null);
  }

  //
  //
  //

  factory ModelAddressEntry.from(
    Model? other,
  ) {
    try {
      return fromOrNull(other)!;
    } catch (e) {
      assert(false, 'ModelAddressEntry.from: $e');
      rethrow;
    }
  }

  static ModelAddressEntry? fromOrNull(
    Model? other,
  ) {
    return fromJsonOrNull(other?.toJson())!;
  }

  //
  //
  //

  factory ModelAddressEntry.of(
    ModelAddressEntry other,
  ) {
    try {
      return ofOrNull(other)!;
    } catch (e) {
      assert(false, 'ModelAddressEntry.of: $e');
      rethrow;
    }
  }

  static ModelAddressEntry? ofOrNull(
    ModelAddressEntry? other,
  ) {
    return fromJsonOrNull(other?.toJson());
  }

  //
  //
  //

  factory ModelAddressEntry.fromJsonString(
    String source,
  ) {
    try {
      return fromJsonStringOrNull(source)!;
    } catch (e) {
      assert(false, 'ModelAddressEntry.fromJsonString: $e');
      rethrow;
    }
  }

  static ModelAddressEntry? fromJsonStringOrNull(
    String? source,
  ) {
    try {
      if (source!.isNotEmpty) {
        final decoded = jsonDecode(source);
        return ModelAddressEntry.fromJson(decoded);
      } else {
        return ModelAddressEntry.empty();
      }
    } catch (_) {
      return null;
    }
  }

  //
  //
  //

  factory ModelAddressEntry.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return fromJsonOrNull(otherData)!;
    } catch (e) {
      assert(false, 'ModelAddressEntry.fromJson: $e');
      rethrow;
    }
  }

  static ModelAddressEntry? fromJsonOrNull(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return ModelAddressEntry.empty()
        ..$ref = otherData?[K_REF]
        ..$id = otherData?[K_ID]
        ..$title = otherData?[K_TITLE]
        ..$titleSearchable = otherData?[K_TITLE_SEARCHABLE]
        ..$description = otherData?[K_DESCRIPTION]
        ..$createdAt = otherData?[K_CREATED_AT]
        ..$createdBy = otherData?[K_CREATED_BY]
        ..$deletedAt = otherData?[K_DELETED_AT]
        ..$deletedBy = otherData?[K_DELETED_BY]
        ..$modifiedAt = otherData?[K_MODIFIED_AT]
        ..$modifiedBy = otherData?[K_MODIFIED_BY]
        ..$addressLine1 = otherData?[K_ADDRESS_LINE_1]
        ..$addressLine2 = otherData?[K_ADDRESS_LINE_2]
        ..$city = otherData?[K_CITY]
        ..$stateOrProvince = otherData?[K_STATE_OR_PROVINCE]
        ..$postalCode = otherData?[K_POSTAL_CODE]
        ..$country = otherData?[K_COUNTRY];
    } catch (e) {
      return null;
    }
  }

  //
  //
  //

  factory ModelAddressEntry.fromUri(
    Uri? uri,
  ) {
    try {
      return fromUriOrNull(uri)!;
    } catch (e) {
      assert(false, 'ModelAddressEntry.fromUri: $e');
      rethrow;
    }
  }

  static ModelAddressEntry? fromUriOrNull(
    Uri? uri,
  ) {
    try {
      if (uri != null && uri.path == CLASS) {
        return ModelAddressEntry.fromJson(uri.queryParameters);
      } else {
        return ModelAddressEntry.empty();
      }
    } catch (_) {
      return null;
    }
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final withNulls = <String, dynamic>{
        K_REF: this.$ref,
        K_ID: this.$id,
        K_TITLE: this.$title,
        K_TITLE_SEARCHABLE: this.$titleSearchable,
        K_DESCRIPTION: this.$description,
        K_CREATED_AT: this.$createdAt,
        K_CREATED_BY: this.$createdBy,
        K_DELETED_AT: this.$deletedAt,
        K_DELETED_BY: this.$deletedBy,
        K_MODIFIED_AT: this.$modifiedAt,
        K_MODIFIED_BY: this.$modifiedBy,
        K_ADDRESS_LINE_1: this.$addressLine1,
        K_ADDRESS_LINE_2: this.$addressLine2,
        K_CITY: this.$city,
        K_STATE_OR_PROVINCE: this.$stateOrProvince,
        K_POSTAL_CODE: this.$postalCode,
        K_COUNTRY: this.$country,
      }.mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, 'ModelAddressEntry.toJson: $e');
      rethrow;
    }
  }

  //
  //
  //

  @override
  T empty<T extends Model>() {
    return ModelAddressEntry.b() as T;
  }

  //
  //
  //

  @override
  T copy<T extends Model>() {
    return (ModelAddressEntry.b()..updateWith(this)) as T;
  }

  //
  //
  //

  @override
  void updateWithJson(
    Map<String, dynamic>? otherData,
  ) {
    if (otherData != null && otherData.isNotEmpty) {
      final other = ModelAddressEntry.fromJson(otherData);
      if (other.ref != null) {
        this.ref = other.ref!;
      }
      if (other.id != null) {
        this.id = other.id!;
      }
      if (other.title != null) {
        this.title = other.title!;
      }
      if (other.titleSearchable != null) {
        this.titleSearchable = other.titleSearchable!;
      }
      if (other.description != null) {
        this.description = other.description!;
      }
      if (other.createdAt != null) {
        this.createdAt = other.createdAt!;
      }
      if (other.createdBy != null) {
        this.createdBy = other.createdBy!;
      }
      if (other.deletedAt != null) {
        this.deletedAt = other.deletedAt!;
      }
      if (other.deletedBy != null) {
        this.deletedBy = other.deletedBy!;
      }
      if (other.modifiedAt != null) {
        this.modifiedAt = other.modifiedAt!;
      }
      if (other.modifiedBy != null) {
        this.modifiedBy = other.modifiedBy!;
      }
      if (other.addressLine1 != null) {
        this.addressLine1 = other.addressLine1!;
      }
      if (other.addressLine2 != null) {
        this.addressLine2 = other.addressLine2!;
      }
      if (other.city != null) {
        this.city = other.city!;
      }
      if (other.stateOrProvince != null) {
        this.stateOrProvince = other.stateOrProvince!;
      }
      if (other.postalCode != null) {
        this.postalCode = other.postalCode!;
      }
      if (other.country != null) {
        this.country = other.country!;
      }
    }
  }

  //
  //
  //

  // ref.
  DataRefModel get refField => this.ref!;
  set refField(DataRefModel v) => this.ref = v;
  @protected
  dynamic get $ref => this.ref?.toJson();
  @protected
  set $ref(v) => this.ref = () {
        final a = letMap<String, dynamic>(v);
        return a != null ? DataRefModel.fromJson(a) : null;
      }();

  // id.
  String? get idField => this.id;
  set idField(String? v) => this.id = v;
  @protected
  dynamic get $id => this.id?.toString().trim().nullIfEmpty;
  @protected
  set $id(v) => this.id = v?.toString().trim().nullIfEmpty;

  // title.
  String? get titleField => this.title;
  set titleField(String? v) => this.title = v;
  @protected
  dynamic get $title => this.title?.toString().trim().nullIfEmpty;
  @protected
  set $title(v) => this.title = v?.toString().trim().nullIfEmpty;

  // titleSearchable.
  String? get titleSearchableField => this.titleSearchable;
  set titleSearchableField(String? v) => this.titleSearchable = v;
  @protected
  dynamic get $titleSearchable => this
      .titleSearchable
      ?.toString()
      .trim()
      .nullIfEmpty
      ?.toLowerCase()
      .replaceAll(r'[^\w]', '');
  @protected
  set $titleSearchable(v) => this.titleSearchable =
      v?.toString().trim().nullIfEmpty?.toLowerCase().replaceAll(r'[^\w]', '');

  // description.
  String? get descriptionField => this.description;
  set descriptionField(String? v) => this.description = v;
  @protected
  dynamic get $description => this.description?.toString().trim().nullIfEmpty;
  @protected
  set $description(v) => this.description = v?.toString().trim().nullIfEmpty;

  // createdAt.
  DateTime? get createdAtField => this.createdAt;
  set createdAtField(DateTime? v) => this.createdAt = v;
  @protected
  dynamic get $createdAt => this.createdAt?.toUtc()?.toIso8601String();
  @protected
  set $createdAt(v) => this.createdAt = () {
        final a = v;
        return a != null ? DateTime.tryParse(a)?.toUtc() : null;
      }();

  // createdBy.
  String? get createdByField => this.createdBy;
  set createdByField(String? v) => this.createdBy = v;
  @protected
  dynamic get $createdBy => this.createdBy?.toString().trim().nullIfEmpty;
  @protected
  set $createdBy(v) => this.createdBy = v?.toString().trim().nullIfEmpty;

  // deletedAt.
  DateTime? get deletedAtField => this.deletedAt;
  set deletedAtField(DateTime? v) => this.deletedAt = v;
  @protected
  dynamic get $deletedAt => this.deletedAt?.toUtc()?.toIso8601String();
  @protected
  set $deletedAt(v) => this.deletedAt = () {
        final a = v;
        return a != null ? DateTime.tryParse(a)?.toUtc() : null;
      }();

  // deletedBy.
  String? get deletedByField => this.deletedBy;
  set deletedByField(String? v) => this.deletedBy = v;
  @protected
  dynamic get $deletedBy => this.deletedBy?.toString().trim().nullIfEmpty;
  @protected
  set $deletedBy(v) => this.deletedBy = v?.toString().trim().nullIfEmpty;

  // modifiedAt.
  DateTime? get modifiedAtField => this.modifiedAt;
  set modifiedAtField(DateTime? v) => this.modifiedAt = v;
  @protected
  dynamic get $modifiedAt => this.modifiedAt?.toUtc()?.toIso8601String();
  @protected
  set $modifiedAt(v) => this.modifiedAt = () {
        final a = v;
        return a != null ? DateTime.tryParse(a)?.toUtc() : null;
      }();

  // modifiedBy.
  String? get modifiedByField => this.modifiedBy;
  set modifiedByField(String? v) => this.modifiedBy = v;
  @protected
  dynamic get $modifiedBy => this.modifiedBy?.toString().trim().nullIfEmpty;
  @protected
  set $modifiedBy(v) => this.modifiedBy = v?.toString().trim().nullIfEmpty;

  // addressLine1.
  String? get addressLine1Field => this.addressLine1;
  set addressLine1Field(String? v) => this.addressLine1 = v;
  @protected
  dynamic get $addressLine1 => this.addressLine1?.toString().trim().nullIfEmpty;
  @protected
  set $addressLine1(v) => this.addressLine1 = v?.toString().trim().nullIfEmpty;

  // addressLine2.
  String? get addressLine2Field => this.addressLine2;
  set addressLine2Field(String? v) => this.addressLine2 = v;
  @protected
  dynamic get $addressLine2 => this.addressLine2?.toString().trim().nullIfEmpty;
  @protected
  set $addressLine2(v) => this.addressLine2 = v?.toString().trim().nullIfEmpty;

  // city.
  String? get cityField => this.city;
  set cityField(String? v) => this.city = v;
  @protected
  dynamic get $city => this.city?.toString().trim().nullIfEmpty;
  @protected
  set $city(v) => this.city = v?.toString().trim().nullIfEmpty;

  // stateOrProvince.
  String? get stateOrProvinceField => this.stateOrProvince;
  set stateOrProvinceField(String? v) => this.stateOrProvince = v;
  @protected
  dynamic get $stateOrProvince =>
      this.stateOrProvince?.toString().trim().nullIfEmpty;
  @protected
  set $stateOrProvince(v) =>
      this.stateOrProvince = v?.toString().trim().nullIfEmpty;

  // postalCode.
  String? get postalCodeField => this.postalCode;
  set postalCodeField(String? v) => this.postalCode = v;
  @protected
  dynamic get $postalCode => this.postalCode?.toString().trim().nullIfEmpty;
  @protected
  set $postalCode(v) => this.postalCode = v?.toString().trim().nullIfEmpty;

  // country.
  String? get countryField => this.country;
  set countryField(String? v) => this.country = v;
  @protected
  dynamic get $country => this.country?.toString().trim().nullIfEmpty;
  @protected
  set $country(v) => this.country = v?.toString().trim().nullIfEmpty;
}
