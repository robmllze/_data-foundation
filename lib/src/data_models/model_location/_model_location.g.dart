//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: empty_constructor_bodies
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_this

part of 'model_location.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class ModelLocation extends Model {
  //
  //
  //

  static const K_ALTITUDE = 'altitude';
  static const K_LATITUDE = 'latitude';
  static const K_LONGITUDE = 'longitude';

  static const CLASS = 'ModelLocation';

  @override
  String get $class => CLASS;

  double? altitude;
  double? latitude;
  double? longitude;

  //
  //
  //

  ModelLocation.empty();

  //
  //
  //

  factory ModelLocation({
    double? altitude,
    double? latitude,
    double? longitude,
  }) {
    return ModelLocation.b(
      altitude: altitude,
      latitude: latitude,
      longitude: longitude,
    );
  }

  //
  //
  //

  ModelLocation.b({
    this.altitude,
    this.latitude,
    this.longitude,
  }) {}

  //
  //
  //

  factory ModelLocation.from(
    Model? other,
  ) {
    try {
      return fromOrNull(other)!;
    } catch (e) {
      assert(false, 'ModelLocation.from: $e');
      rethrow;
    }
  }

  static ModelLocation? fromOrNull(
    Model? other,
  ) {
    return fromJsonOrNull(other?.toJson())!;
  }

  //
  //
  //

  factory ModelLocation.of(
    ModelLocation other,
  ) {
    try {
      return ofOrNull(other)!;
    } catch (e) {
      assert(false, 'ModelLocation.of: $e');
      rethrow;
    }
  }

  static ModelLocation? ofOrNull(
    ModelLocation? other,
  ) {
    return fromJsonOrNull(other?.toJson());
  }

  //
  //
  //

  factory ModelLocation.fromJsonString(
    String source,
  ) {
    try {
      return fromJsonStringOrNull(source)!;
    } catch (e) {
      assert(false, 'ModelLocation.fromJsonString: $e');
      rethrow;
    }
  }

  static ModelLocation? fromJsonStringOrNull(
    String? source,
  ) {
    try {
      if (source!.isNotEmpty) {
        final decoded = jsonDecode(source);
        return ModelLocation.fromJson(decoded);
      } else {
        return ModelLocation.empty();
      }
    } catch (_) {
      return null;
    }
  }

  //
  //
  //

  factory ModelLocation.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return fromJsonOrNull(otherData)!;
    } catch (e) {
      assert(false, 'ModelLocation.fromJson: $e');
      rethrow;
    }
  }

  static ModelLocation? fromJsonOrNull(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return ModelLocation.empty()
        ..$altitude = otherData?[K_ALTITUDE]
        ..$latitude = otherData?[K_LATITUDE]
        ..$longitude = otherData?[K_LONGITUDE];
    } catch (e) {
      return null;
    }
  }

  //
  //
  //

  factory ModelLocation.fromUri(
    Uri? uri,
  ) {
    try {
      return fromUriOrNull(uri)!;
    } catch (e) {
      assert(false, 'ModelLocation.fromUri: $e');
      rethrow;
    }
  }

  static ModelLocation? fromUriOrNull(
    Uri? uri,
  ) {
    try {
      if (uri != null && uri.path == CLASS) {
        return ModelLocation.fromJson(uri.queryParameters);
      } else {
        return ModelLocation.empty();
      }
    } catch (_) {
      return null;
    }
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final withNulls = <String, dynamic>{
        K_ALTITUDE: this.$altitude,
        K_LATITUDE: this.$latitude,
        K_LONGITUDE: this.$longitude,
      }.mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, 'ModelLocation.toJson: $e');
      rethrow;
    }
  }

  //
  //
  //

  @override
  T empty<T extends Model>() {
    return ModelLocation.b() as T;
  }

  //
  //
  //

  @override
  T copy<T extends Model>() {
    return (ModelLocation.b()..updateWith(this)) as T;
  }

  //
  //
  //

  @override
  void updateWithJson(
    Map<String, dynamic>? otherData,
  ) {
    if (otherData != null && otherData.isNotEmpty) {
      final other = ModelLocation.fromJson(otherData);
      if (other.altitude != null) {
        this.altitude = other.altitude!;
      }
      if (other.latitude != null) {
        this.latitude = other.latitude!;
      }
      if (other.longitude != null) {
        this.longitude = other.longitude!;
      }
    }
  }

  //
  //
  //

  // altitude.
  double? get altitudeField => this.altitude;
  set altitudeField(double? v) => this.altitude = v;
  @protected
  dynamic get $altitude => this.altitude;
  @protected
  set $altitude(v) => this.altitude = letDouble(v);

  // latitude.
  double? get latitudeField => this.latitude;
  set latitudeField(double? v) => this.latitude = v;
  @protected
  dynamic get $latitude => this.latitude;
  @protected
  set $latitude(v) => this.latitude = letDouble(v);

  // longitude.
  double? get longitudeField => this.longitude;
  set longitudeField(double? v) => this.longitude = v;
  @protected
  dynamic get $longitude => this.longitude;
  @protected
  set $longitude(v) => this.longitude = letDouble(v);
}
