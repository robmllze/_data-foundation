//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: empty_constructor_bodies
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_this

part of 'model_auth_user.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class ModelAuthUser extends _ModelAuthUser {
  //
  //
  //

  static const K_REF = 'ref';
  static const K_ID = 'id';
  static const K_EMAIL = 'email';
  static const K_PASSWORD = 'password';
  static const K_ID_TOKEN = 'idToken';
  static const K_DISPLAY_NAME = 'displayName';
  static const K_PHOTO_URL = 'photoUrl';
  static const K_EMAIL_VERIFIED = 'emailVerified';

  static const CLASS = 'ModelAuthUser';

  @override
  String get $class => CLASS;

  DataRefModel? ref;
  String? id;
  String? email;
  String? password;
  String? idToken;
  String? displayName;
  String? photoUrl;
  bool? emailVerified;

  //
  //
  //

  ModelAuthUser.empty();

  //
  //
  //

  factory ModelAuthUser({
    DataRefModel? ref,
    String? id,
    String? email,
    String? password,
    String? idToken,
    String? displayName,
    String? photoUrl,
    bool? emailVerified,
  }) {
    return ModelAuthUser.b(
      ref: ref,
      id: id,
      email: email,
      password: password,
      idToken: idToken,
      displayName: displayName,
      photoUrl: photoUrl,
      emailVerified: emailVerified,
    );
  }

  //
  //
  //

  ModelAuthUser.b({
    this.ref,
    this.id,
    this.email,
    this.password,
    this.idToken,
    this.displayName,
    this.photoUrl,
    this.emailVerified,
  }) {
    assert(this.ref != null);
    assert(this.id != null);
    assert(this.email != null);
    assert(this.password != null);
    assert(this.idToken != null);
    assert(this.displayName != null);
    assert(this.photoUrl != null);
    assert(this.emailVerified != null);
  }

  //
  //
  //

  factory ModelAuthUser.from(
    Model? other,
  ) {
    try {
      return fromOrNull(other)!;
    } catch (e) {
      assert(false, 'ModelAuthUser.from: $e');
      rethrow;
    }
  }

  static ModelAuthUser? fromOrNull(
    Model? other,
  ) {
    return fromJsonOrNull(other?.toJson())!;
  }

  //
  //
  //

  factory ModelAuthUser.of(
    ModelAuthUser other,
  ) {
    try {
      return ofOrNull(other)!;
    } catch (e) {
      assert(false, 'ModelAuthUser.of: $e');
      rethrow;
    }
  }

  static ModelAuthUser? ofOrNull(
    ModelAuthUser? other,
  ) {
    return fromJsonOrNull(other?.toJson());
  }

  //
  //
  //

  factory ModelAuthUser.fromJsonString(
    String source,
  ) {
    try {
      return fromJsonStringOrNull(source)!;
    } catch (e) {
      assert(false, 'ModelAuthUser.fromJsonString: $e');
      rethrow;
    }
  }

  static ModelAuthUser? fromJsonStringOrNull(
    String? source,
  ) {
    try {
      if (source!.isNotEmpty) {
        final decoded = jsonDecode(source);
        return ModelAuthUser.fromJson(decoded);
      } else {
        return ModelAuthUser.empty();
      }
    } catch (_) {
      return null;
    }
  }

  //
  //
  //

  factory ModelAuthUser.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return fromJsonOrNull(otherData)!;
    } catch (e) {
      assert(false, 'ModelAuthUser.fromJson: $e');
      rethrow;
    }
  }

  static ModelAuthUser? fromJsonOrNull(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return ModelAuthUser.empty()
        ..$ref = otherData?[K_REF]
        ..$id = otherData?[K_ID]
        ..$email = otherData?[K_EMAIL]
        ..$password = otherData?[K_PASSWORD]
        ..$idToken = otherData?[K_ID_TOKEN]
        ..$displayName = otherData?[K_DISPLAY_NAME]
        ..$photoUrl = otherData?[K_PHOTO_URL]
        ..$emailVerified = otherData?[K_EMAIL_VERIFIED];
    } catch (e) {
      return null;
    }
  }

  //
  //
  //

  factory ModelAuthUser.fromUri(
    Uri? uri,
  ) {
    try {
      return fromUriOrNull(uri)!;
    } catch (e) {
      assert(false, 'ModelAuthUser.fromUri: $e');
      rethrow;
    }
  }

  static ModelAuthUser? fromUriOrNull(
    Uri? uri,
  ) {
    try {
      if (uri != null && uri.path == CLASS) {
        return ModelAuthUser.fromJson(uri.queryParameters);
      } else {
        return ModelAuthUser.empty();
      }
    } catch (_) {
      return null;
    }
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final withNulls = <String, dynamic>{
        K_REF: this.$ref,
        K_ID: this.$id,
        K_EMAIL: this.$email,
        K_PASSWORD: this.$password,
        K_ID_TOKEN: this.$idToken,
        K_DISPLAY_NAME: this.$displayName,
        K_PHOTO_URL: this.$photoUrl,
        K_EMAIL_VERIFIED: this.$emailVerified,
      }.mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, 'ModelAuthUser.toJson: $e');
      rethrow;
    }
  }

  //
  //
  //

  @override
  T empty<T extends Model>() {
    return ModelAuthUser.b() as T;
  }

  //
  //
  //

  @override
  T copy<T extends Model>() {
    return (ModelAuthUser.b()..updateWith(this)) as T;
  }

  //
  //
  //

  @override
  void updateWithJson(
    Map<String, dynamic>? otherData,
  ) {
    if (otherData != null && otherData.isNotEmpty) {
      final other = ModelAuthUser.fromJson(otherData);
      if (other.ref != null) {
        this.ref = other.ref!;
      }
      if (other.id != null) {
        this.id = other.id!;
      }
      if (other.email != null) {
        this.email = other.email!;
      }
      if (other.password != null) {
        this.password = other.password!;
      }
      if (other.idToken != null) {
        this.idToken = other.idToken!;
      }
      if (other.displayName != null) {
        this.displayName = other.displayName!;
      }
      if (other.photoUrl != null) {
        this.photoUrl = other.photoUrl!;
      }
      if (other.emailVerified != null) {
        this.emailVerified = other.emailVerified!;
      }
    }
  }

  //
  //
  //

  // ref.
  DataRefModel? get refField => this.ref;
  set refField(DataRefModel? v) => this.ref = v;
  @protected
  dynamic get $ref => this.ref?.toJson();
  @protected
  set $ref(v) => this.ref = () {
        final a = letMap<String, dynamic>(v);
        return a != null ? DataRefModel.fromJson(a) : null;
      }();

  // id.
  String? get idField => this.id;
  set idField(String? v) => this.id = v;
  @protected
  dynamic get $id => this.id?.toString().trim().nullIfEmpty;
  @protected
  set $id(v) => this.id = v?.toString().trim().nullIfEmpty;

  // email.
  String? get emailField => this.email;
  set emailField(String? v) => this.email = v;
  @protected
  dynamic get $email => this.email?.toString().trim().nullIfEmpty;
  @protected
  set $email(v) => this.email = v?.toString().trim().nullIfEmpty;

  // password.
  String? get passwordField => this.password;
  set passwordField(String? v) => this.password = v;
  @protected
  dynamic get $password => this.password?.toString().trim().nullIfEmpty;
  @protected
  set $password(v) => this.password = v?.toString().trim().nullIfEmpty;

  // idToken.
  String? get idTokenField => this.idToken;
  set idTokenField(String? v) => this.idToken = v;
  @protected
  dynamic get $idToken => this.idToken?.toString().trim().nullIfEmpty;
  @protected
  set $idToken(v) => this.idToken = v?.toString().trim().nullIfEmpty;

  // displayName.
  String? get displayNameField => this.displayName;
  set displayNameField(String? v) => this.displayName = v;
  @protected
  dynamic get $displayName => this.displayName?.toString().trim().nullIfEmpty;
  @protected
  set $displayName(v) => this.displayName = v?.toString().trim().nullIfEmpty;

  // photoUrl.
  String? get photoUrlField => this.photoUrl;
  set photoUrlField(String? v) => this.photoUrl = v;
  @protected
  dynamic get $photoUrl => this.photoUrl?.toString().trim().nullIfEmpty;
  @protected
  set $photoUrl(v) => this.photoUrl = v?.toString().trim().nullIfEmpty;

  // emailVerified.
  bool? get emailVerifiedField => this.emailVerified;
  set emailVerifiedField(bool? v) => this.emailVerified = v;
  @protected
  dynamic get $emailVerified => this.emailVerified;
  @protected
  set $emailVerified(v) => this.emailVerified = letBool(v);
}
