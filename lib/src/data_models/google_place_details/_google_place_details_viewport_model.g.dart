//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_question_mark
// ignore_for_file: unnecessary_this

part of 'google_place_details.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class GooglePlaceDetailsViewportModel extends _GooglePlaceDetailsViewportModel {
  //
  //
  //

  static const CLASS_NAME = 'GooglePlaceDetailsViewportModel';

  @override
  String get $className => CLASS_NAME;

  final GooglePlaceDetailsLocationModel? northeast;
  final GooglePlaceDetailsLocationModel? southwest;

  //
  //
  //

  const GooglePlaceDetailsViewportModel({
    required this.northeast,
    required this.southwest,
  });

  const GooglePlaceDetailsViewportModel.c2({
    this.northeast,
    this.southwest,
  });

  factory GooglePlaceDetailsViewportModel.c3({
    GooglePlaceDetailsLocationModel? northeast,
    GooglePlaceDetailsLocationModel? southwest,
  }) {
    assert(northeast != null);
    assert(southwest != null);
    return GooglePlaceDetailsViewportModel(
      northeast: northeast,
      southwest: southwest,
    );
  }

  factory GooglePlaceDetailsViewportModel.from(
    BaseModel? other,
  ) {
    try {
      return fromOrNull(other)!;
    } catch (e) {
      assert(false, 'GooglePlaceDetailsViewportModel.from: $e');
      rethrow;
    }
  }

  static GooglePlaceDetailsViewportModel? fromOrNull(
    BaseModel? other,
  ) {
    return fromJsonOrNull(other?.toJson())!;
  }

  factory GooglePlaceDetailsViewportModel.of(
    GooglePlaceDetailsViewportModel other,
  ) {
    try {
      return ofOrNull(other)!;
    } catch (e) {
      assert(false, 'GooglePlaceDetailsViewportModel.of: $e');
      rethrow;
    }
  }

  static GooglePlaceDetailsViewportModel? ofOrNull(
    GooglePlaceDetailsViewportModel? other,
  ) {
    return fromJsonOrNull(other?.toJson());
  }

  factory GooglePlaceDetailsViewportModel.fromJsonString(
    String source,
  ) {
    try {
      return fromJsonStringOrNull(source)!;
    } catch (e) {
      assert(false, 'GooglePlaceDetailsViewportModel.fromJsonString: $e');
      rethrow;
    }
  }

  static GooglePlaceDetailsViewportModel? fromJsonStringOrNull(
    String? source,
  ) {
    try {
      if (source!.isNotEmpty) {
        final decoded = jsonDecode(source);
        return GooglePlaceDetailsViewportModel.fromJson(decoded);
      } else {
        return const GooglePlaceDetailsViewportModel.c2();
      }
    } catch (_) {
      return null;
    }
  }

  factory GooglePlaceDetailsViewportModel.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return fromJsonOrNull(otherData)!;
    } catch (e) {
      assert(false, 'GooglePlaceDetailsViewportModel.fromJson: $e');
      rethrow;
    }
  }

  static GooglePlaceDetailsViewportModel? fromJsonOrNull(
    Map<String, dynamic>? otherData,
  ) {
    try {
      final northeast0 = otherData?['northeast'];
      final northeast = () {
        final a = letMap<String, dynamic>(northeast0);
        return a != null ? GooglePlaceDetailsLocationModel.fromJson(a) : null;
      }();
      final southwest0 = otherData?['southwest'];
      final southwest = () {
        final a = letMap<String, dynamic>(southwest0);
        return a != null ? GooglePlaceDetailsLocationModel.fromJson(a) : null;
      }();
      return GooglePlaceDetailsViewportModel(
        northeast: northeast,
        southwest: southwest,
      );
    } catch (e) {
      return null;
    }
  }

  factory GooglePlaceDetailsViewportModel.fromUri(
    Uri? uri,
  ) {
    try {
      return fromUriOrNull(uri)!;
    } catch (e) {
      assert(false, 'GooglePlaceDetailsViewportModel.fromUri: $e');
      rethrow;
    }
  }

  static GooglePlaceDetailsViewportModel? fromUriOrNull(
    Uri? uri,
  ) {
    try {
      if (uri != null && uri.path == CLASS_NAME) {
        return GooglePlaceDetailsViewportModel.fromJson(uri.queryParameters);
      } else {
        return const GooglePlaceDetailsViewportModel.c2();
      }
    } catch (_) {
      return null;
    }
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final northeast0 = this.northeast?.toJson();
      final southwest0 = this.southwest?.toJson();
      final withNulls = mergeMapsDeep([
        {
          'northeast': northeast0,
        },
        {
          'southwest': southwest0,
        },
      ]).mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, 'GooglePlaceDetailsViewportModel.toJson: $e');
      rethrow;
    }
  }

  //
  //
  //

  @override
  GooglePlaceDetailsViewportModel copyWith(BaseModel? other) {
    final a = this.toJson();
    final b = other?.toJson();
    final c = {...a, ...?b};
    return GooglePlaceDetailsViewportModel.fromJson(c);
  }

  //
  //
  //

  // northeast.
  GooglePlaceDetailsLocationModel get northeastField => this.northeast!;

  // southwest.
  GooglePlaceDetailsLocationModel get southwestField => this.southwest!;
}

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

final class GooglePlaceDetailsViewportModelFieldNames {
  //
  //
  //

  static const northeast = 'northeast';
  static const southwest = 'southwest';

  //
  //
  //

  const GooglePlaceDetailsViewportModelFieldNames._();
}
