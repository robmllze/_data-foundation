//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_question_mark
// ignore_for_file: unnecessary_this

part of 'google_place_details.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class GooglePlaceDetailsDataModel extends _GooglePlaceDetailsDataModel {
  //
  //
  //

  static const CLASS_NAME = 'GooglePlaceDetailsDataModel';

  @override
  String get $className => CLASS_NAME;

  final List<String>? htmlAttributions;
  final GooglePlaceDetailsResultModel? result;
  final String? status;

  //
  //
  //

  const GooglePlaceDetailsDataModel({
    required this.htmlAttributions,
    required this.result,
    required this.status,
  });

  const GooglePlaceDetailsDataModel.c2({
    this.htmlAttributions,
    this.result,
    this.status,
  });

  factory GooglePlaceDetailsDataModel.c3({
    List<String>? htmlAttributions,
    GooglePlaceDetailsResultModel? result,
    String? status,
  }) {
    assert(htmlAttributions != null);
    assert(result != null);
    assert(status != null);
    return GooglePlaceDetailsDataModel(
      htmlAttributions: htmlAttributions,
      result: result,
      status: status,
    );
  }

  factory GooglePlaceDetailsDataModel.from(
    BaseModel? other,
  ) {
    try {
      return fromOrNull(other)!;
    } catch (e) {
      assert(false, 'GooglePlaceDetailsDataModel.from: $e');
      rethrow;
    }
  }

  static GooglePlaceDetailsDataModel? fromOrNull(
    BaseModel? other,
  ) {
    return fromJsonOrNull(other?.toJson())!;
  }

  factory GooglePlaceDetailsDataModel.of(
    GooglePlaceDetailsDataModel other,
  ) {
    try {
      return ofOrNull(other)!;
    } catch (e) {
      assert(false, 'GooglePlaceDetailsDataModel.of: $e');
      rethrow;
    }
  }

  static GooglePlaceDetailsDataModel? ofOrNull(
    GooglePlaceDetailsDataModel? other,
  ) {
    return fromJsonOrNull(other?.toJson());
  }

  factory GooglePlaceDetailsDataModel.fromJsonString(
    String source,
  ) {
    try {
      return fromJsonStringOrNull(source)!;
    } catch (e) {
      assert(false, 'GooglePlaceDetailsDataModel.fromJsonString: $e');
      rethrow;
    }
  }

  static GooglePlaceDetailsDataModel? fromJsonStringOrNull(
    String? source,
  ) {
    try {
      if (source!.isNotEmpty) {
        final decoded = jsonDecode(source);
        return GooglePlaceDetailsDataModel.fromJson(decoded);
      } else {
        return const GooglePlaceDetailsDataModel.c2();
      }
    } catch (_) {
      return null;
    }
  }

  factory GooglePlaceDetailsDataModel.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return fromJsonOrNull(otherData)!;
    } catch (e) {
      assert(false, 'GooglePlaceDetailsDataModel.fromJson: $e');
      rethrow;
    }
  }

  static GooglePlaceDetailsDataModel? fromJsonOrNull(
    Map<String, dynamic>? otherData,
  ) {
    try {
      final htmlAttributions0 = otherData?['html_attributions'];
      final htmlAttributions = letList(htmlAttributions0)
          ?.map(
            (p0) => p0?.toString().trim().nullIfEmpty,
          )
          .nonNulls
          .nullIfEmpty
          ?.toList();
      final result0 = otherData?['result'];
      final result = () {
        final a = letMap<String, dynamic>(result0);
        return a != null ? GooglePlaceDetailsResultModel.fromJson(a) : null;
      }();
      final status0 = otherData?['status'];
      final status = status0?.toString().trim().nullIfEmpty;
      return GooglePlaceDetailsDataModel(
        htmlAttributions: htmlAttributions,
        result: result,
        status: status,
      );
    } catch (e) {
      return null;
    }
  }

  factory GooglePlaceDetailsDataModel.fromUri(
    Uri? uri,
  ) {
    try {
      return fromUriOrNull(uri)!;
    } catch (e) {
      assert(false, 'GooglePlaceDetailsDataModel.fromUri: $e');
      rethrow;
    }
  }

  static GooglePlaceDetailsDataModel? fromUriOrNull(
    Uri? uri,
  ) {
    try {
      if (uri != null && uri.path == CLASS_NAME) {
        return GooglePlaceDetailsDataModel.fromJson(uri.queryParameters);
      } else {
        return const GooglePlaceDetailsDataModel.c2();
      }
    } catch (_) {
      return null;
    }
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final htmlAttributions0 = this
          .htmlAttributions
          ?.map(
            (p0) => p0?.trim().nullIfEmpty,
          )
          .nonNulls
          .nullIfEmpty
          ?.toList();
      final result0 = this.result?.toJson();
      final status0 = this.status?.trim().nullIfEmpty;
      final withNulls = mergeMapsDeep([
        {
          'html_attributions': htmlAttributions0,
        },
        {
          'result': result0,
        },
        {
          'status': status0,
        },
      ]).mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, 'GooglePlaceDetailsDataModel.toJson: $e');
      rethrow;
    }
  }

  //
  //
  //

  @override
  GooglePlaceDetailsDataModel copyWith(BaseModel? other) {
    final a = this.toJson();
    final b = other?.toJson();
    final c = {...a, ...?b};
    return GooglePlaceDetailsDataModel.fromJson(c);
  }

  //
  //
  //

  // htmlAttributions.
  List<String> get htmlAttributionsField => this.htmlAttributions!;

  // result.
  GooglePlaceDetailsResultModel get resultField => this.result!;

  // status.
  String get statusField => this.status!;
}

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

final class GooglePlaceDetailsDataModelFieldNames {
  //
  //
  //

  static const htmlAttributions = 'html_attributions';
  static const result = 'result';
  static const status = 'status';

  //
  //
  //

  const GooglePlaceDetailsDataModelFieldNames._();
}
