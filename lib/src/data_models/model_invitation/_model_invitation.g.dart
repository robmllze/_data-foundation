//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: empty_constructor_bodies
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_this

part of 'model_invitation.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class ModelInvitation extends _ModelInvitation {
  //
  //
  //

  static const K_REF = 'ref';
  static const K_ID = 'id';
  static const K_CREATED_REG = 'createdReg';
  static const K_EXPIRES_AT = 'expiresAt';
  static const K_TYPE = 'type';
  static const K_BODY = 'body';
  static const K_INVITATION_LINK = 'invitationLink';
  static const K_INVITEE_SEARCHABLE_EMAILS = 'inviteeSearchableEmails';
  static const K_INVITEE_ACCEPTED_SEARCHABLE_EMAILS =
      'inviteeAcceptedSearchableEmails';
  static const K_INVITEE_REJECTED_SEARCHABLE_EMAILS =
      'inviteeRejectedSearchableEmails';

  static const CLASS = 'ModelInvitation';

  @override
  String get $class => CLASS;

  DataRefModel? ref;
  String? id;
  ModelRegistration? createdReg;
  DateTime? expiresAt;
  InvitationType? type;
  DataModel? body;
  Uri? invitationLink;
  Set<String>? inviteeSearchableEmails;
  Set<String>? inviteeAcceptedSearchableEmails;
  Set<String>? inviteeRejectedSearchableEmails;

  //
  //
  //

  ModelInvitation.empty();

  //
  //
  //

  factory ModelInvitation({
    required DataRefModel ref,
    String? id,
    required ModelRegistration createdReg,
    DateTime? expiresAt,
    InvitationType? type,
    DataModel? body,
    Uri? invitationLink,
    Set<String>? inviteeSearchableEmails,
    Set<String>? inviteeAcceptedSearchableEmails,
    Set<String>? inviteeRejectedSearchableEmails,
  }) {
    return ModelInvitation.b(
      ref: ref,
      id: id,
      createdReg: createdReg,
      expiresAt: expiresAt,
      type: type,
      body: body,
      invitationLink: invitationLink,
      inviteeSearchableEmails: inviteeSearchableEmails,
      inviteeAcceptedSearchableEmails: inviteeAcceptedSearchableEmails,
      inviteeRejectedSearchableEmails: inviteeRejectedSearchableEmails,
    );
  }

  //
  //
  //

  ModelInvitation.b({
    this.ref,
    this.id,
    this.createdReg,
    this.expiresAt,
    this.type,
    this.body,
    this.invitationLink,
    this.inviteeSearchableEmails,
    this.inviteeAcceptedSearchableEmails,
    this.inviteeRejectedSearchableEmails,
  }) {
    assert(this.ref != null);

    assert(this.createdReg != null);
  }

  //
  //
  //

  factory ModelInvitation.from(
    Model? other,
  ) {
    try {
      return fromOrNull(other)!;
    } catch (e) {
      assert(false, 'ModelInvitation.from: $e');
      rethrow;
    }
  }

  static ModelInvitation? fromOrNull(
    Model? other,
  ) {
    return fromJsonOrNull(other?.toJson())!;
  }

  //
  //
  //

  factory ModelInvitation.of(
    ModelInvitation other,
  ) {
    try {
      return ofOrNull(other)!;
    } catch (e) {
      assert(false, 'ModelInvitation.of: $e');
      rethrow;
    }
  }

  static ModelInvitation? ofOrNull(
    ModelInvitation? other,
  ) {
    return fromJsonOrNull(other?.toJson());
  }

  //
  //
  //

  factory ModelInvitation.fromJsonString(
    String source,
  ) {
    try {
      return fromJsonStringOrNull(source)!;
    } catch (e) {
      assert(false, 'ModelInvitation.fromJsonString: $e');
      rethrow;
    }
  }

  static ModelInvitation? fromJsonStringOrNull(
    String? source,
  ) {
    try {
      if (source!.isNotEmpty) {
        final decoded = jsonDecode(source);
        return ModelInvitation.fromJson(decoded);
      } else {
        return ModelInvitation.empty();
      }
    } catch (_) {
      return null;
    }
  }

  //
  //
  //

  factory ModelInvitation.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return fromJsonOrNull(otherData)!;
    } catch (e) {
      assert(false, 'ModelInvitation.fromJson: $e');
      rethrow;
    }
  }

  static ModelInvitation? fromJsonOrNull(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return ModelInvitation.empty()
        ..$ref = otherData?[K_REF]
        ..$id = otherData?[K_ID]
        ..$createdReg = otherData?[K_CREATED_REG]
        ..$expiresAt = otherData?[K_EXPIRES_AT]
        ..$type = otherData?[K_TYPE]
        ..$body = otherData?[K_BODY]
        ..$invitationLink = otherData?[K_INVITATION_LINK]
        ..$inviteeSearchableEmails = otherData?[K_INVITEE_SEARCHABLE_EMAILS]
        ..$inviteeAcceptedSearchableEmails =
            otherData?[K_INVITEE_ACCEPTED_SEARCHABLE_EMAILS]
        ..$inviteeRejectedSearchableEmails =
            otherData?[K_INVITEE_REJECTED_SEARCHABLE_EMAILS];
    } catch (e) {
      return null;
    }
  }

  //
  //
  //

  factory ModelInvitation.fromUri(
    Uri? uri,
  ) {
    try {
      return fromUriOrNull(uri)!;
    } catch (e) {
      assert(false, 'ModelInvitation.fromUri: $e');
      rethrow;
    }
  }

  static ModelInvitation? fromUriOrNull(
    Uri? uri,
  ) {
    try {
      if (uri != null && uri.path == CLASS) {
        return ModelInvitation.fromJson(uri.queryParameters);
      } else {
        return ModelInvitation.empty();
      }
    } catch (_) {
      return null;
    }
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final withNulls = <String, dynamic>{
        K_REF: this.$ref,
        K_ID: this.$id,
        K_CREATED_REG: this.$createdReg,
        K_EXPIRES_AT: this.$expiresAt,
        K_TYPE: this.$type,
        K_BODY: this.$body,
        K_INVITATION_LINK: this.$invitationLink,
        K_INVITEE_SEARCHABLE_EMAILS: this.$inviteeSearchableEmails,
        K_INVITEE_ACCEPTED_SEARCHABLE_EMAILS:
            this.$inviteeAcceptedSearchableEmails,
        K_INVITEE_REJECTED_SEARCHABLE_EMAILS:
            this.$inviteeRejectedSearchableEmails,
      }.mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, 'ModelInvitation.toJson: $e');
      rethrow;
    }
  }

  //
  //
  //

  @override
  T empty<T extends Model>() {
    return ModelInvitation.b() as T;
  }

  //
  //
  //

  @override
  T copy<T extends Model>() {
    return (ModelInvitation.b()..updateWith(this)) as T;
  }

  //
  //
  //

  @override
  void updateWithJson(
    Map<String, dynamic>? otherData,
  ) {
    if (otherData != null && otherData.isNotEmpty) {
      final other = ModelInvitation.fromJson(otherData);
      if (other.ref != null) {
        this.ref = other.ref!;
      }
      if (other.id != null) {
        this.id = other.id!;
      }
      if (other.createdReg != null) {
        this.createdReg = other.createdReg!;
      }
      if (other.expiresAt != null) {
        this.expiresAt = other.expiresAt!;
      }
      if (other.type != null) {
        this.type = other.type!;
      }
      if (other.body != null) {
        this.body = other.body!;
      }
      if (other.invitationLink != null) {
        this.invitationLink = other.invitationLink!;
      }
      if (other.inviteeSearchableEmails != null) {
        this.inviteeSearchableEmails = other.inviteeSearchableEmails!;
      }
      if (other.inviteeAcceptedSearchableEmails != null) {
        this.inviteeAcceptedSearchableEmails =
            other.inviteeAcceptedSearchableEmails!;
      }
      if (other.inviteeRejectedSearchableEmails != null) {
        this.inviteeRejectedSearchableEmails =
            other.inviteeRejectedSearchableEmails!;
      }
    }
  }

  //
  //
  //

  // ref.
  DataRefModel get refField => this.ref!;
  set refField(DataRefModel v) => this.ref = v;
  @protected
  dynamic get $ref => this.ref?.toJson();
  @protected
  set $ref(v) => this.ref = () {
        final a = letMap<String, dynamic>(v);
        return a != null ? DataRefModel.fromJson(a) : null;
      }();

  // id.
  String? get idField => this.id;
  set idField(String? v) => this.id = v;
  @protected
  dynamic get $id => this.id?.toString().trim().nullIfEmpty;
  @protected
  set $id(v) => this.id = v?.toString().trim().nullIfEmpty;

  // createdReg.
  ModelRegistration get createdRegField => this.createdReg!;
  set createdRegField(ModelRegistration v) => this.createdReg = v;
  @protected
  dynamic get $createdReg => this.createdReg?.toJson();
  @protected
  set $createdReg(v) => this.createdReg = () {
        final a = letMap<String, dynamic>(v);
        return a != null ? ModelRegistration.fromJson(a) : null;
      }();

  // expiresAt.
  DateTime? get expiresAtField => this.expiresAt;
  set expiresAtField(DateTime? v) => this.expiresAt = v;
  @protected
  dynamic get $expiresAt => this.expiresAt?.toUtc()?.toIso8601String();
  @protected
  set $expiresAt(v) => this.expiresAt = () {
        final a = v;
        return a != null ? DateTime.tryParse(a)?.toUtc() : null;
      }();

  // type.
  InvitationType? get typeField => this.type;
  set typeField(InvitationType? v) => this.type = v;
  @protected
  dynamic get $type => this.type?.name;
  @protected
  set $type(v) => this.type = InvitationType.values.valueOf(letAs<String>(v));

  // body.
  DataModel? get bodyField => this.body;
  set bodyField(DataModel? v) => this.body = v;
  @protected
  dynamic get $body => this.body?.data;
  @protected
  set $body(v) => this.body = () {
        final a = letMap<String, dynamic>(v);
        return a != null ? DataModel(data: a) : null;
      }();

  // invitationLink.
  Uri? get invitationLinkField => this.invitationLink;
  set invitationLinkField(Uri? v) => this.invitationLink = v;
  @protected
  dynamic get $invitationLink => this.invitationLink?.toString();
  @protected
  set $invitationLink(v) => this.invitationLink = () {
        final a = v;
        return a is String ? a.trim().nullIfEmpty?.toUriOrNull() : null;
      }();

  // inviteeSearchableEmails.
  Set<String>? get inviteeSearchableEmailsField => this.inviteeSearchableEmails;
  set inviteeSearchableEmailsField(Set<String>? v) =>
      this.inviteeSearchableEmails = v;
  @protected
  dynamic get $inviteeSearchableEmails => this
      .inviteeSearchableEmails
      ?.map(
        (p0) => p0
            ?.toString()
            .trim()
            .nullIfEmpty
            ?.toLowerCase()
            .replaceAll(r'[^\w]', ''),
      )
      .nonNulls
      .nullIfEmpty
      ?.toList();
  @protected
  set $inviteeSearchableEmails(v) => this.inviteeSearchableEmails = letSet(v)
      ?.map(
        (p0) => p0
            ?.toString()
            .trim()
            .nullIfEmpty
            ?.toLowerCase()
            .replaceAll(r'[^\w]', ''),
      )
      .nonNulls
      .nullIfEmpty
      ?.toSet()
      .cast();

  // inviteeAcceptedSearchableEmails.
  Set<String>? get inviteeAcceptedSearchableEmailsField =>
      this.inviteeAcceptedSearchableEmails;
  set inviteeAcceptedSearchableEmailsField(Set<String>? v) =>
      this.inviteeAcceptedSearchableEmails = v;
  @protected
  dynamic get $inviteeAcceptedSearchableEmails => this
      .inviteeAcceptedSearchableEmails
      ?.map(
        (p0) => p0
            ?.toString()
            .trim()
            .nullIfEmpty
            ?.toLowerCase()
            .replaceAll(r'[^\w]', ''),
      )
      .nonNulls
      .nullIfEmpty
      ?.toList();
  @protected
  set $inviteeAcceptedSearchableEmails(v) =>
      this.inviteeAcceptedSearchableEmails = letSet(v)
          ?.map(
            (p0) => p0
                ?.toString()
                .trim()
                .nullIfEmpty
                ?.toLowerCase()
                .replaceAll(r'[^\w]', ''),
          )
          .nonNulls
          .nullIfEmpty
          ?.toSet()
          .cast();

  // inviteeRejectedSearchableEmails.
  Set<String>? get inviteeRejectedSearchableEmailsField =>
      this.inviteeRejectedSearchableEmails;
  set inviteeRejectedSearchableEmailsField(Set<String>? v) =>
      this.inviteeRejectedSearchableEmails = v;
  @protected
  dynamic get $inviteeRejectedSearchableEmails => this
      .inviteeRejectedSearchableEmails
      ?.map(
        (p0) => p0
            ?.toString()
            .trim()
            .nullIfEmpty
            ?.toLowerCase()
            .replaceAll(r'[^\w]', ''),
      )
      .nonNulls
      .nullIfEmpty
      ?.toList();
  @protected
  set $inviteeRejectedSearchableEmails(v) =>
      this.inviteeRejectedSearchableEmails = letSet(v)
          ?.map(
            (p0) => p0
                ?.toString()
                .trim()
                .nullIfEmpty
                ?.toLowerCase()
                .replaceAll(r'[^\w]', ''),
          )
          .nonNulls
          .nullIfEmpty
          ?.toSet()
          .cast();
}
