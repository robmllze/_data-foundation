//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: empty_constructor_bodies
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_this

part of 'model_connection_permissions.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class ModelConnectionPermissions extends Model {
  //
  //
  //

  static const CLASS_NAME = 'ModelConnectionPermissions';

  @override
  String get $className => CLASS_NAME;

  final bool? minimalPermit;
  final bool? minimalRequest;
  final bool? editorPermit;
  final bool? editorRequest;
  final bool? messagingPermit;
  final bool? messagingRequest;
  final bool? notificationPermit;
  final bool? notificationRequest;
  final bool? readOnlyPermit;
  final bool? readOnlyRequest;

  //
  //
  //

  const ModelConnectionPermissions({
    this.minimalPermit,
    this.minimalRequest,
    this.editorPermit,
    this.editorRequest,
    this.messagingPermit,
    this.messagingRequest,
    this.notificationPermit,
    this.notificationRequest,
    this.readOnlyPermit,
    this.readOnlyRequest,
  });

  const ModelConnectionPermissions.c2({
    this.minimalPermit,
    this.minimalRequest,
    this.editorPermit,
    this.editorRequest,
    this.messagingPermit,
    this.messagingRequest,
    this.notificationPermit,
    this.notificationRequest,
    this.readOnlyPermit,
    this.readOnlyRequest,
  });

  factory ModelConnectionPermissions.c3({
    bool? minimalPermit,
    bool? minimalRequest,
    bool? editorPermit,
    bool? editorRequest,
    bool? messagingPermit,
    bool? messagingRequest,
    bool? notificationPermit,
    bool? notificationRequest,
    bool? readOnlyPermit,
    bool? readOnlyRequest,
  }) {
    return ModelConnectionPermissions(
      minimalPermit: minimalPermit,
      minimalRequest: minimalRequest,
      editorPermit: editorPermit,
      editorRequest: editorRequest,
      messagingPermit: messagingPermit,
      messagingRequest: messagingRequest,
      notificationPermit: notificationPermit,
      notificationRequest: notificationRequest,
      readOnlyPermit: readOnlyPermit,
      readOnlyRequest: readOnlyRequest,
    );
  }

  factory ModelConnectionPermissions.from(
    BaseModel? other,
  ) {
    try {
      return fromOrNull(other)!;
    } catch (e) {
      assert(false, 'ModelConnectionPermissions.from: $e');
      rethrow;
    }
  }

  static ModelConnectionPermissions? fromOrNull(
    BaseModel? other,
  ) {
    return fromJsonOrNull(other?.toJson())!;
  }

  factory ModelConnectionPermissions.of(
    ModelConnectionPermissions other,
  ) {
    try {
      return ofOrNull(other)!;
    } catch (e) {
      assert(false, 'ModelConnectionPermissions.of: $e');
      rethrow;
    }
  }

  static ModelConnectionPermissions? ofOrNull(
    ModelConnectionPermissions? other,
  ) {
    return fromJsonOrNull(other?.toJson());
  }

  factory ModelConnectionPermissions.fromJsonString(
    String source,
  ) {
    try {
      return fromJsonStringOrNull(source)!;
    } catch (e) {
      assert(false, 'ModelConnectionPermissions.fromJsonString: $e');
      rethrow;
    }
  }

  static ModelConnectionPermissions? fromJsonStringOrNull(
    String? source,
  ) {
    try {
      if (source!.isNotEmpty) {
        final decoded = jsonDecode(source);
        return ModelConnectionPermissions.fromJson(decoded);
      } else {
        return const ModelConnectionPermissions.c2();
      }
    } catch (_) {
      return null;
    }
  }

  factory ModelConnectionPermissions.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return fromJsonOrNull(otherData)!;
    } catch (e) {
      assert(false, 'ModelConnectionPermissions.fromJson: $e');
      rethrow;
    }
  }

  static ModelConnectionPermissions? fromJsonOrNull(
    Map<String, dynamic>? otherData,
  ) {
    try {
      final minimalPermit0 =
          otherData?[ModelConnectionPermissionsFields.minimalPermit.name];
      final minimalPermit = letBool(minimalPermit0);
      final minimalRequest0 =
          otherData?[ModelConnectionPermissionsFields.minimalRequest.name];
      final minimalRequest = letBool(minimalRequest0);
      final editorPermit0 =
          otherData?[ModelConnectionPermissionsFields.editorPermit.name];
      final editorPermit = letBool(editorPermit0);
      final editorRequest0 =
          otherData?[ModelConnectionPermissionsFields.editorRequest.name];
      final editorRequest = letBool(editorRequest0);
      final messagingPermit0 =
          otherData?[ModelConnectionPermissionsFields.messagingPermit.name];
      final messagingPermit = letBool(messagingPermit0);
      final messagingRequest0 =
          otherData?[ModelConnectionPermissionsFields.messagingRequest.name];
      final messagingRequest = letBool(messagingRequest0);
      final notificationPermit0 =
          otherData?[ModelConnectionPermissionsFields.notificationPermit.name];
      final notificationPermit = letBool(notificationPermit0);
      final notificationRequest0 =
          otherData?[ModelConnectionPermissionsFields.notificationRequest.name];
      final notificationRequest = letBool(notificationRequest0);
      final readOnlyPermit0 =
          otherData?[ModelConnectionPermissionsFields.readOnlyPermit.name];
      final readOnlyPermit = letBool(readOnlyPermit0);
      final readOnlyRequest0 =
          otherData?[ModelConnectionPermissionsFields.readOnlyRequest.name];
      final readOnlyRequest = letBool(readOnlyRequest0);
      return ModelConnectionPermissions(
        minimalPermit: minimalPermit,
        minimalRequest: minimalRequest,
        editorPermit: editorPermit,
        editorRequest: editorRequest,
        messagingPermit: messagingPermit,
        messagingRequest: messagingRequest,
        notificationPermit: notificationPermit,
        notificationRequest: notificationRequest,
        readOnlyPermit: readOnlyPermit,
        readOnlyRequest: readOnlyRequest,
      );
    } catch (e) {
      return null;
    }
  }

  factory ModelConnectionPermissions.fromUri(
    Uri? uri,
  ) {
    try {
      return fromUriOrNull(uri)!;
    } catch (e) {
      assert(false, 'ModelConnectionPermissions.fromUri: $e');
      rethrow;
    }
  }

  static ModelConnectionPermissions? fromUriOrNull(
    Uri? uri,
  ) {
    try {
      if (uri != null && uri.path == CLASS_NAME) {
        return ModelConnectionPermissions.fromJson(uri.queryParameters);
      } else {
        return const ModelConnectionPermissions.c2();
      }
    } catch (_) {
      return null;
    }
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final minimalPermit0 = this.minimalPermit;
      final minimalRequest0 = this.minimalRequest;
      final editorPermit0 = this.editorPermit;
      final editorRequest0 = this.editorRequest;
      final messagingPermit0 = this.messagingPermit;
      final messagingRequest0 = this.messagingRequest;
      final notificationPermit0 = this.notificationPermit;
      final notificationRequest0 = this.notificationRequest;
      final readOnlyPermit0 = this.readOnlyPermit;
      final readOnlyRequest0 = this.readOnlyRequest;
      final withNulls = <String, dynamic>{
        ModelConnectionPermissionsFields.minimalPermit.name: minimalPermit0,
        ModelConnectionPermissionsFields.minimalRequest.name: minimalRequest0,
        ModelConnectionPermissionsFields.editorPermit.name: editorPermit0,
        ModelConnectionPermissionsFields.editorRequest.name: editorRequest0,
        ModelConnectionPermissionsFields.messagingPermit.name: messagingPermit0,
        ModelConnectionPermissionsFields.messagingRequest.name:
            messagingRequest0,
        ModelConnectionPermissionsFields.notificationPermit.name:
            notificationPermit0,
        ModelConnectionPermissionsFields.notificationRequest.name:
            notificationRequest0,
        ModelConnectionPermissionsFields.readOnlyPermit.name: readOnlyPermit0,
        ModelConnectionPermissionsFields.readOnlyRequest.name: readOnlyRequest0,
      }.mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, 'ModelConnectionPermissions.toJson: $e');
      rethrow;
    }
  }

  //
  //
  //

  @override
  ModelConnectionPermissions copyWith(BaseModel? other) {
    final a = this.toJson();
    final b = other?.toJson();
    final c = {...a, ...?b};
    return ModelConnectionPermissions.fromJson(c);
  }

  //
  //
  //

  // minimalPermit.
  bool? get minimalPermitField => this.minimalPermit;

  // minimalRequest.
  bool? get minimalRequestField => this.minimalRequest;

  // editorPermit.
  bool? get editorPermitField => this.editorPermit;

  // editorRequest.
  bool? get editorRequestField => this.editorRequest;

  // messagingPermit.
  bool? get messagingPermitField => this.messagingPermit;

  // messagingRequest.
  bool? get messagingRequestField => this.messagingRequest;

  // notificationPermit.
  bool? get notificationPermitField => this.notificationPermit;

  // notificationRequest.
  bool? get notificationRequestField => this.notificationRequest;

  // readOnlyPermit.
  bool? get readOnlyPermitField => this.readOnlyPermit;

  // readOnlyRequest.
  bool? get readOnlyRequestField => this.readOnlyRequest;
}

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

enum ModelConnectionPermissionsFields {
  //
  //
  //

  minimalPermit(
    const Field(
      fieldName: 'minimalPermit',
      fieldType: 'bool',
      nullable: true,
    ),
  ),
  minimalRequest(
    const Field(
      fieldName: 'minimalRequest',
      fieldType: 'bool',
      nullable: true,
    ),
  ),
  editorPermit(
    const Field(
      fieldName: 'editorPermit',
      fieldType: 'bool',
      nullable: true,
    ),
  ),
  editorRequest(
    const Field(
      fieldName: 'editorRequest',
      fieldType: 'bool',
      nullable: true,
    ),
  ),
  messagingPermit(
    const Field(
      fieldName: 'messagingPermit',
      fieldType: 'bool',
      nullable: true,
    ),
  ),
  messagingRequest(
    const Field(
      fieldName: 'messagingRequest',
      fieldType: 'bool',
      nullable: true,
    ),
  ),
  notificationPermit(
    const Field(
      fieldName: 'notificationPermit',
      fieldType: 'bool',
      nullable: true,
    ),
  ),
  notificationRequest(
    const Field(
      fieldName: 'notificationRequest',
      fieldType: 'bool',
      nullable: true,
    ),
  ),
  readOnlyPermit(
    const Field(
      fieldName: 'readOnlyPermit',
      fieldType: 'bool',
      nullable: true,
    ),
  ),
  readOnlyRequest(
    const Field(
      fieldName: 'readOnlyRequest',
      fieldType: 'bool',
      nullable: true,
    ),
  );

  //
  //
  //

  final Field field;

  //
  //
  //

  const ModelConnectionPermissionsFields(this.field);

  //
  //
  //

  String get fieldName => this.field.fieldName!;
}
