//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: empty_constructor_bodies
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_this

part of 'model_device_registration.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class ModelDeviceRegistration extends _ModelDeviceRegistration {
  //
  //
  //

  static const K_DEVICE_INFO = 'device_info';
  static const K_ID = 'id';
  static const K_IPV_4_ADDRESS = 'ipv_4_address';
  static const K_LAST_LOGGED_IN_AT = 'last_logged_in_at';
  static const K_LOCATION = 'location';
  static const K_NOTIFICATION_TOKEN = 'notification_token';
  static const K_REGISTERED_AT = 'registered_at';
  static const K_REGISTRANT_PID = 'registrant_pid';

  static const CLASS = 'ModelDeviceRegistration';

  @override
  String get $class => CLASS;

  ModelBasicDeviceInfo? deviceInfo;
  String? id;
  String? ipv4Address;
  DateTime? lastLoggedInAt;
  ModelLocation? location;
  String? notificationToken;
  DateTime? registeredAt;
  String? registrantPid;

  //
  //
  //

  ModelDeviceRegistration.empty();

  //
  //
  //

  factory ModelDeviceRegistration({
    ModelBasicDeviceInfo? deviceInfo,
    String? id,
    String? ipv4Address,
    DateTime? lastLoggedInAt,
    ModelLocation? location,
    String? notificationToken,
    DateTime? registeredAt,
    String? registrantPid,
  }) {
    return ModelDeviceRegistration.b(
      deviceInfo: deviceInfo,
      id: id,
      ipv4Address: ipv4Address,
      lastLoggedInAt: lastLoggedInAt,
      location: location,
      notificationToken: notificationToken,
      registeredAt: registeredAt,
      registrantPid: registrantPid,
    );
  }

  //
  //
  //

  ModelDeviceRegistration.b({
    this.deviceInfo,
    this.id,
    this.ipv4Address,
    this.lastLoggedInAt,
    this.location,
    this.notificationToken,
    this.registeredAt,
    this.registrantPid,
  }) {}

  //
  //
  //

  factory ModelDeviceRegistration.from(
    Model? other,
  ) {
    try {
      return fromOrNull(other)!;
    } catch (e) {
      assert(false, 'ModelDeviceRegistration.from: $e');
      rethrow;
    }
  }

  static ModelDeviceRegistration? fromOrNull(
    Model? other,
  ) {
    return fromJsonOrNull(other?.toJson())!;
  }

  //
  //
  //

  factory ModelDeviceRegistration.of(
    ModelDeviceRegistration other,
  ) {
    try {
      return ofOrNull(other)!;
    } catch (e) {
      assert(false, 'ModelDeviceRegistration.of: $e');
      rethrow;
    }
  }

  static ModelDeviceRegistration? ofOrNull(
    ModelDeviceRegistration? other,
  ) {
    return fromJsonOrNull(other?.toJson());
  }

  //
  //
  //

  factory ModelDeviceRegistration.fromJsonString(
    String source,
  ) {
    try {
      return fromJsonStringOrNull(source)!;
    } catch (e) {
      assert(false, 'ModelDeviceRegistration.fromJsonString: $e');
      rethrow;
    }
  }

  static ModelDeviceRegistration? fromJsonStringOrNull(
    String? source,
  ) {
    try {
      if (source!.isNotEmpty) {
        final decoded = jsonDecode(source);
        return ModelDeviceRegistration.fromJson(decoded);
      } else {
        return ModelDeviceRegistration.empty();
      }
    } catch (_) {
      return null;
    }
  }

  //
  //
  //

  factory ModelDeviceRegistration.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return fromJsonOrNull(otherData)!;
    } catch (e) {
      assert(false, 'ModelDeviceRegistration.fromJson: $e');
      rethrow;
    }
  }

  static ModelDeviceRegistration? fromJsonOrNull(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return ModelDeviceRegistration.empty()
        ..$deviceInfo = otherData?[K_DEVICE_INFO]
        ..$id = otherData?[K_ID]
        ..$ipv4Address = otherData?[K_IPV_4_ADDRESS]
        ..$lastLoggedInAt = otherData?[K_LAST_LOGGED_IN_AT]
        ..$location = otherData?[K_LOCATION]
        ..$notificationToken = otherData?[K_NOTIFICATION_TOKEN]
        ..$registeredAt = otherData?[K_REGISTERED_AT]
        ..$registrantPid = otherData?[K_REGISTRANT_PID];
    } catch (e) {
      return null;
    }
  }

  //
  //
  //

  factory ModelDeviceRegistration.fromUri(
    Uri? uri,
  ) {
    try {
      return fromUriOrNull(uri)!;
    } catch (e) {
      assert(false, 'ModelDeviceRegistration.fromUri: $e');
      rethrow;
    }
  }

  static ModelDeviceRegistration? fromUriOrNull(
    Uri? uri,
  ) {
    try {
      if (uri != null && uri.path == CLASS) {
        return ModelDeviceRegistration.fromJson(uri.queryParameters);
      } else {
        return ModelDeviceRegistration.empty();
      }
    } catch (_) {
      return null;
    }
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final withNulls = <String, dynamic>{
        K_DEVICE_INFO: this.$deviceInfo,
        K_ID: this.$id,
        K_IPV_4_ADDRESS: this.$ipv4Address,
        K_LAST_LOGGED_IN_AT: this.$lastLoggedInAt,
        K_LOCATION: this.$location,
        K_NOTIFICATION_TOKEN: this.$notificationToken,
        K_REGISTERED_AT: this.$registeredAt,
        K_REGISTRANT_PID: this.$registrantPid,
      }.mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, 'ModelDeviceRegistration.toJson: $e');
      rethrow;
    }
  }

  //
  //
  //

  @override
  T empty<T extends Model>() {
    return ModelDeviceRegistration.b() as T;
  }

  //
  //
  //

  @override
  T copy<T extends Model>() {
    return (ModelDeviceRegistration.b()..updateWith(this)) as T;
  }

  //
  //
  //

  @override
  void updateWithJson(
    Map<String, dynamic>? otherData,
  ) {
    if (otherData != null && otherData.isNotEmpty) {
      final other = ModelDeviceRegistration.fromJson(otherData);
      if (other.deviceInfo != null) {
        this.deviceInfo = other.deviceInfo!;
      }
      if (other.id != null) {
        this.id = other.id!;
      }
      if (other.ipv4Address != null) {
        this.ipv4Address = other.ipv4Address!;
      }
      if (other.lastLoggedInAt != null) {
        this.lastLoggedInAt = other.lastLoggedInAt!;
      }
      if (other.location != null) {
        this.location = other.location!;
      }
      if (other.notificationToken != null) {
        this.notificationToken = other.notificationToken!;
      }
      if (other.registeredAt != null) {
        this.registeredAt = other.registeredAt!;
      }
      if (other.registrantPid != null) {
        this.registrantPid = other.registrantPid!;
      }
    }
  }

  //
  //
  //

  // deviceInfo.
  ModelBasicDeviceInfo? get deviceInfoField => this.deviceInfo;
  set deviceInfoField(ModelBasicDeviceInfo? v) => this.deviceInfo = v;
  @protected
  dynamic get $deviceInfo => this.deviceInfo?.toJson();
  @protected
  set $deviceInfo(v) => this.deviceInfo = () {
        final a = letMap<String, dynamic>(v);
        return a != null ? ModelBasicDeviceInfo.fromJson(a) : null;
      }();

  // id.
  String? get idField => this.id;
  set idField(String? v) => this.id = v;
  @protected
  dynamic get $id => this.id?.toString().trim().nullIfEmpty;
  @protected
  set $id(v) => this.id = v?.toString().trim().nullIfEmpty;

  // ipv4Address.
  String? get ipv4AddressField => this.ipv4Address;
  set ipv4AddressField(String? v) => this.ipv4Address = v;
  @protected
  dynamic get $ipv4Address => this.ipv4Address?.toString().trim().nullIfEmpty;
  @protected
  set $ipv4Address(v) => this.ipv4Address = v?.toString().trim().nullIfEmpty;

  // lastLoggedInAt.
  DateTime? get lastLoggedInAtField => this.lastLoggedInAt;
  set lastLoggedInAtField(DateTime? v) => this.lastLoggedInAt = v;
  @protected
  dynamic get $lastLoggedInAt =>
      this.lastLoggedInAt?.toUtc()?.toIso8601String();
  @protected
  set $lastLoggedInAt(v) => this.lastLoggedInAt = () {
        final a = v;
        return a != null ? DateTime.tryParse(a)?.toUtc() : null;
      }();

  // location.
  ModelLocation? get locationField => this.location;
  set locationField(ModelLocation? v) => this.location = v;
  @protected
  dynamic get $location => this.location?.toJson();
  @protected
  set $location(v) => this.location = () {
        final a = letMap<String, dynamic>(v);
        return a != null ? ModelLocation.fromJson(a) : null;
      }();

  // notificationToken.
  String? get notificationTokenField => this.notificationToken;
  set notificationTokenField(String? v) => this.notificationToken = v;
  @protected
  dynamic get $notificationToken =>
      this.notificationToken?.toString().trim().nullIfEmpty;
  @protected
  set $notificationToken(v) =>
      this.notificationToken = v?.toString().trim().nullIfEmpty;

  // registeredAt.
  DateTime? get registeredAtField => this.registeredAt;
  set registeredAtField(DateTime? v) => this.registeredAt = v;
  @protected
  dynamic get $registeredAt => this.registeredAt?.toUtc()?.toIso8601String();
  @protected
  set $registeredAt(v) => this.registeredAt = () {
        final a = v;
        return a != null ? DateTime.tryParse(a)?.toUtc() : null;
      }();

  // registrantPid.
  String? get registrantPidField => this.registrantPid;
  set registrantPidField(String? v) => this.registrantPid = v;
  @protected
  dynamic get $registrantPid =>
      this.registrantPid?.toString().trim().nullIfEmpty;
  @protected
  set $registrantPid(v) =>
      this.registrantPid = v?.toString().trim().nullIfEmpty;
}
