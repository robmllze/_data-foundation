//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: empty_constructor_bodies
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_this

part of 'model_file_entry.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class ModelFileEntry extends _ModelFileEntry {
  //
  //
  //

  static const CLASS = 'ModelFileEntry';
  static const MODEL_ID = 'model_file_entry';

  static const K_CREATED_AT = 'created_at';
  static const K_CREATED_BY = 'created_by';
  static const K_DOWNLOAD_URL = 'download_url';
  static const K_FALSE_PATH = 'false_path';
  static const K_ID = 'id';
  static const K_NAME = 'name';
  static const K_SIZE = 'size';
  static const K_STORAGE_PATH = 'storage_path';
  static const K_TYPE = 'type';

  DateTime? createdAt;
  String? createdBy;
  Uri? downloadUrl;
  List<String>? falsePath;
  String? name;
  int? size;
  String? storagePath;
  String? type;

  //
  //
  //

  ModelFileEntry({
    String? id,
    this.createdAt,
    this.createdBy,
    this.downloadUrl,
    this.falsePath,
    this.name,
    this.size,
    this.storagePath,
    this.type,
  }) {
    this.id = id;
  }

  //
  //
  //

  ModelFileEntry.unsafe({
    String? id,
    this.createdAt,
    this.createdBy,
    this.downloadUrl,
    this.falsePath,
    this.name,
    this.size,
    this.storagePath,
    this.type,
  }) {
    this.id = id;
  }

  //
  //
  //

  factory ModelFileEntry.from(
    Model? other,
  ) {
    return ModelFileEntry.fromJson(
      other is GenericModel ? other.data : other?.toJson(),
    );
  }

  //
  //
  //

  factory ModelFileEntry.of(
    ModelFileEntry? other,
  ) {
    return ModelFileEntry.fromJson(other?.toJson());
  }

  //
  //
  //

  factory ModelFileEntry.fromJsonString(
    String? source,
  ) {
    try {
      if (source != null && source.isNotEmpty) {
        final decoded = jsonDecode(source);
        return ModelFileEntry.fromJson(decoded);
      } else {
        return ModelFileEntry.unsafe();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelFileEntry.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return ModelFileEntry.unsafe(
        createdAt: () {
          final a = otherData?[K_CREATED_AT];
          return a != null ? DateTime.tryParse(a)?.toUtc() : null;
        }(),
        createdBy: otherData?[K_CREATED_BY]?.toString().trim().nullIfEmpty,
        downloadUrl: () {
          final a = otherData?[K_DOWNLOAD_URL];
          return a is String ? a.trim().nullIfEmpty?.toUriOrNull() : null;
        }(),
        falsePath: letList(otherData?[K_FALSE_PATH])
            ?.map(
              (p0) => p0?.toString().trim().nullIfEmpty,
            )
            .nonNulls
            .nullIfEmpty
            ?.toList()
            .cast(),
        id: otherData?[K_ID]?.toString().trim().nullIfEmpty,
        name: otherData?[K_NAME]?.toString().trim().nullIfEmpty,
        size: letInt(otherData?[K_SIZE]),
        storagePath: otherData?[K_STORAGE_PATH]?.toString().trim().nullIfEmpty,
        type: otherData?[K_TYPE]?.toString().trim().nullIfEmpty,
      );
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelFileEntry.fromUri(
    Uri? uri,
  ) {
    try {
      if (uri != null && uri.path == MODEL_ID) {
        return ModelFileEntry.fromJson(uri.queryParameters);
      } else {
        return ModelFileEntry.unsafe();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  static ModelFileEntry? convert(
    Model? other,
  ) {
    return other != null ? ModelFileEntry.from(other) : null;
  }

  //
  //
  //

  static ModelFileEntry? fromPool({
    required Iterable<ModelFileEntry>? pool,
    required String? id,
  }) {
    return id != null ? pool?.firstWhereOrNull((e) => e.id == id) : null;
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final withNulls = <String, dynamic>{
        K_CREATED_AT: createdAt?.toUtc()?.toIso8601String(),
        K_CREATED_BY: createdBy?.toString().trim().nullIfEmpty,
        K_DOWNLOAD_URL: downloadUrl?.toString(),
        K_FALSE_PATH: falsePath
            ?.map(
              (p0) => p0?.toString().trim().nullIfEmpty,
            )
            .nonNulls
            .nullIfEmpty
            ?.toList(),
        K_ID: id?.toString().trim().nullIfEmpty,
        K_NAME: name?.toString().trim().nullIfEmpty,
        K_SIZE: size,
        K_STORAGE_PATH: storagePath?.toString().trim().nullIfEmpty,
        K_TYPE: type?.toString().trim().nullIfEmpty,
      }.mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  @override
  T empty<T extends Model>() {
    return ModelFileEntry.unsafe() as T;
  }

  //
  //
  //

  @override
  T copy<T extends Model>() {
    return (ModelFileEntry.unsafe()..updateWith(this)) as T;
  }

  //
  //
  //

  @override
  void updateWithJson(
    Map<String, dynamic>? otherData,
  ) {
    if (otherData != null && otherData.isNotEmpty) {
      final other = ModelFileEntry.fromJson(otherData);
      other.createdAt != null ? this.createdAt = other.createdAt : null;
      other.createdBy != null ? this.createdBy = other.createdBy : null;
      other.downloadUrl != null ? this.downloadUrl = other.downloadUrl : null;
      other.falsePath != null ? this.falsePath = other.falsePath : null;
      other.id != null ? this.id = other.id : null;
      other.name != null ? this.name = other.name : null;
      other.size != null ? this.size = other.size : null;
      other.storagePath != null ? this.storagePath = other.storagePath : null;
      other.type != null ? this.type = other.type : null;
    }
  }

  //
  //
  //

  String get modelId => MODEL_ID;
}
