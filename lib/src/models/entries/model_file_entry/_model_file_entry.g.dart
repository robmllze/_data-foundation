//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: empty_constructor_bodies
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_this

part of 'model_file_entry.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class ModelFileEntry extends _ModelFileEntry {
  //
  //
  //

  static const K_CREATED_AT = 'created_at';
  static const K_CREATED_BY = 'created_by';
  static const K_DOWNLOAD_URL = 'download_url';
  static const K_FALSE_PATH = 'false_path';
  static const K_ID = 'id';
  static const K_NAME = 'name';
  static const K_SIZE = 'size';
  static const K_STORAGE_PATH = 'storage_path';
  static const K_TYPE = 'type';

  static const CLASS = 'ModelFileEntry';

  @override
  String get $class => CLASS;

  DateTime? _createdAt;
  String? _createdBy;
  Uri? _downloadUrl;
  List<String>? _falsePath;
  String? _id;
  String? _name;
  int? _size;
  String? _storagePath;
  String? _type;

  //
  //
  //

  ModelFileEntry.empty();

  //
  //
  //

  factory ModelFileEntry({
    required DateTime createdAt,
    required String createdBy,
    Uri? downloadUrl,
    List<String>? falsePath,
    required String id,
    String? name,
    int? size,
    String? storagePath,
    String? type,
  }) {
    return ModelFileEntry.b(
      createdAt: createdAt,
      createdBy: createdBy,
      downloadUrl: downloadUrl,
      falsePath: falsePath,
      id: id,
      name: name,
      size: size,
      storagePath: storagePath,
      type: type,
    );
  }

  //
  //
  //

  ModelFileEntry.b({
    DateTime? createdAt,
    String? createdBy,
    Uri? downloadUrl,
    List<String>? falsePath,
    String? id,
    String? name,
    int? size,
    String? storagePath,
    String? type,
  }) {
    assert(createdAt != null);
    assert(createdBy != null);
    assert(id != null);
    this._createdAt = createdAt;
    this._createdBy = createdBy;
    this._downloadUrl = downloadUrl;
    this._falsePath = falsePath;
    this._id = id;
    this._name = name;
    this._size = size;
    this._storagePath = storagePath;
    this._type = type;
  }

  //
  //
  //

  factory ModelFileEntry.from(
    Model? other,
  ) {
    return ModelFileEntry.fromJson(
      letAs<GenericModel>(other)?.data ?? other?.toJson(),
    );
  }

  //
  //
  //

  factory ModelFileEntry.of(
    ModelFileEntry? other,
  ) {
    return ModelFileEntry.fromJson(other?.toJson());
  }

  //
  //
  //

  factory ModelFileEntry.fromJsonString(
    String? source,
  ) {
    try {
      if (source != null && source.isNotEmpty) {
        final decoded = jsonDecode(source);
        return ModelFileEntry.fromJson(decoded);
      } else {
        return ModelFileEntry.empty();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelFileEntry.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return ModelFileEntry.empty()
        ..$createdAt = otherData?[K_CREATED_AT]
        ..$createdBy = otherData?[K_CREATED_BY]
        ..$downloadUrl = otherData?[K_DOWNLOAD_URL]
        ..$falsePath = otherData?[K_FALSE_PATH]
        ..$id = otherData?[K_ID]
        ..$name = otherData?[K_NAME]
        ..$size = otherData?[K_SIZE]
        ..$storagePath = otherData?[K_STORAGE_PATH]
        ..$type = otherData?[K_TYPE];
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelFileEntry.fromUri(
    Uri? uri,
  ) {
    try {
      if (uri != null && uri.path == CLASS) {
        return ModelFileEntry.fromJson(uri.queryParameters);
      } else {
        return ModelFileEntry.b();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  static ModelFileEntry? convert(
    Model? other,
  ) {
    return other != null ? ModelFileEntry.from(other) : null;
  }

  //
  //
  //

  static ModelFileEntry? fromPool({
    required Iterable<ModelFileEntry>? pool,
    required String? id,
  }) {
    return id != null ? pool?.firstWhereOrNull((e) => e.id == id) : null;
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final withNulls = <String, dynamic>{
        K_CREATED_AT: this.$createdAt,
        K_CREATED_BY: this.$createdBy,
        K_DOWNLOAD_URL: this.$downloadUrl,
        K_FALSE_PATH: this.$falsePath,
        K_ID: this.$id,
        K_NAME: this.$name,
        K_SIZE: this.$size,
        K_STORAGE_PATH: this.$storagePath,
        K_TYPE: this.$type,
      }.mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  @override
  T empty<T extends Model>() {
    return ModelFileEntry.b() as T;
  }

  //
  //
  //

  @override
  T copy<T extends Model>() {
    return (ModelFileEntry.b()..updateWith(this)) as T;
  }

  //
  //
  //

  @override
  void updateWithJson(
    Map<String, dynamic>? otherData,
  ) {
    if (otherData != null && otherData.isNotEmpty) {
      final other = ModelFileEntry.fromJson(otherData);
      if (other._createdAt != null) {
        this.createdAt = other._createdAt!;
      }
      if (other._createdBy != null) {
        this.createdBy = other._createdBy!;
      }
      if (other._downloadUrl != null) {
        this.downloadUrl = other._downloadUrl!;
      }
      if (other._falsePath != null) {
        this.falsePath = other._falsePath!;
      }
      if (other._id != null) {
        this.id = other._id!;
      }
      if (other._name != null) {
        this.name = other._name!;
      }
      if (other._size != null) {
        this.size = other._size!;
      }
      if (other._storagePath != null) {
        this.storagePath = other._storagePath!;
      }
      if (other._type != null) {
        this.type = other._type!;
      }
    }
  }

  //
  //
  //

  // createdAt.
  DateTime get createdAt => this._createdAt!;
  set createdAt(DateTime v) => this._createdAt = v;
  dynamic get $createdAt => (this._createdAt?.toUtc()?.toIso8601String())!;
  set $createdAt(v) => this._createdAt = () {
        final a = v;
        return a != null ? DateTime.tryParse(a)?.toUtc() : null;
      }();

  // createdBy.
  String get createdBy => this._createdBy!;
  set createdBy(String v) => this._createdBy = v;
  dynamic get $createdBy => (this._createdBy?.toString().trim().nullIfEmpty)!;
  set $createdBy(v) => this._createdBy = v?.toString().trim().nullIfEmpty;

  // downloadUrl.
  Uri? get downloadUrl => this._downloadUrl;
  set downloadUrl(Uri? v) => this._downloadUrl = v;
  dynamic get $downloadUrl => this._downloadUrl?.toString();
  set $downloadUrl(v) => this._downloadUrl = () {
        final a = v;
        return a is String ? a.trim().nullIfEmpty?.toUriOrNull() : null;
      }();

  // falsePath.
  List<String>? get falsePath => this._falsePath;
  set falsePath(List<String>? v) => this._falsePath = v;
  dynamic get $falsePath => this
      ._falsePath
      ?.map(
        (p0) => p0?.toString().trim().nullIfEmpty,
      )
      .nonNulls
      .nullIfEmpty
      ?.toList();
  set $falsePath(v) => this._falsePath = letList(v)
      ?.map(
        (p0) => p0?.toString().trim().nullIfEmpty,
      )
      .nonNulls
      .nullIfEmpty
      ?.toList()
      .cast();

  // id.
  String get id => this._id!;
  set id(String v) => this._id = v;
  dynamic get $id => (this._id?.toString().trim().nullIfEmpty)!;
  set $id(v) => this._id = v?.toString().trim().nullIfEmpty;

  // name.
  String? get name => this._name;
  set name(String? v) => this._name = v;
  dynamic get $name => this._name?.toString().trim().nullIfEmpty;
  set $name(v) => this._name = v?.toString().trim().nullIfEmpty;

  // size.
  int? get size => this._size;
  set size(int? v) => this._size = v;
  dynamic get $size => this._size;
  set $size(v) => this._size = letInt(v);

  // storagePath.
  String? get storagePath => this._storagePath;
  set storagePath(String? v) => this._storagePath = v;
  dynamic get $storagePath => this._storagePath?.toString().trim().nullIfEmpty;
  set $storagePath(v) => this._storagePath = v?.toString().trim().nullIfEmpty;

  // type.
  String? get type => this._type;
  set type(String? v) => this._type = v;
  dynamic get $type => this._type?.toString().trim().nullIfEmpty;
  set $type(v) => this._type = v?.toString().trim().nullIfEmpty;
}
