//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: empty_constructor_bodies
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_this

part of 'model_email_entry.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class ModelEmailEntry extends _ModelEmailEntry {
  //
  //
  //

  static const K_CREATED_AT = 'created_at';
  static const K_CREATED_BY = 'created_by';
  static const K_DESCRIPTION = 'description';
  static const K_EMAIL = 'email';
  static const K_ID = 'id';
  static const K_TITLE = 'title';
  static const K_TITLE_SEARCHABLE = 'title_searchable';

  static const CLASS = 'ModelEmailEntry';

  @override
  String get $class => CLASS;

  DateTime? _createdAt;
  String? _createdBy;
  String? _description;
  String? _email;
  String? _id;
  String? _title;
  String? _titleSearchable;

  //
  //
  //

  ModelEmailEntry.empty();

  //
  //
  //

  factory ModelEmailEntry({
    required DateTime createdAt,
    required String createdBy,
    String? description,
    String? email,
    String? id,
    String? title,
    String? titleSearchable,
  }) {
    return ModelEmailEntry.b(
      createdAt: createdAt,
      createdBy: createdBy,
      description: description,
      email: email,
      id: id,
      title: title,
      titleSearchable: titleSearchable,
    );
  }

  //
  //
  //

  ModelEmailEntry.b({
    DateTime? createdAt,
    String? createdBy,
    String? description,
    String? email,
    String? id,
    String? title,
    String? titleSearchable,
  }) {
    assert(createdAt != null);
    assert(createdBy != null);
    this._createdAt = createdAt;
    this._createdBy = createdBy;
    this._description = description;
    this._email = email;
    this._id = id;
    this._title = title;
    this._titleSearchable = titleSearchable;
  }

  //
  //
  //

  factory ModelEmailEntry.from(
    Model? other,
  ) {
    return ModelEmailEntry.fromJson(
      letAs<GenericModel>(other)?.data ?? other?.toJson(),
    );
  }

  //
  //
  //

  static ModelEmailEntry? fromOrNull(
    Model? other,
  ) {
    return other != null ? ModelEmailEntry.from(other) : null;
  }

  //
  //
  //

  factory ModelEmailEntry.of(
    ModelEmailEntry? other,
  ) {
    return ModelEmailEntry.fromJson(other?.toJson());
  }

  //
  //
  //

  factory ModelEmailEntry.fromJsonString(
    String? source,
  ) {
    try {
      if (source != null && source.isNotEmpty) {
        final decoded = jsonDecode(source);
        return ModelEmailEntry.fromJson(decoded);
      } else {
        return ModelEmailEntry.empty();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelEmailEntry.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return ModelEmailEntry.empty()
        ..$createdAt = otherData?[K_CREATED_AT]
        ..$createdBy = otherData?[K_CREATED_BY]
        ..$description = otherData?[K_DESCRIPTION]
        ..$email = otherData?[K_EMAIL]
        ..$id = otherData?[K_ID]
        ..$title = otherData?[K_TITLE]
        ..$titleSearchable = otherData?[K_TITLE_SEARCHABLE];
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelEmailEntry.fromUri(
    Uri? uri,
  ) {
    try {
      if (uri != null && uri.path == CLASS) {
        return ModelEmailEntry.fromJson(uri.queryParameters);
      } else {
        return ModelEmailEntry.b();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final withNulls = <String, dynamic>{
        K_CREATED_AT: this.$createdAt,
        K_CREATED_BY: this.$createdBy,
        K_DESCRIPTION: this.$description,
        K_EMAIL: this.$email,
        K_ID: this.$id,
        K_TITLE: this.$title,
        K_TITLE_SEARCHABLE: this.$titleSearchable,
      }.mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  @override
  T empty<T extends Model>() {
    return ModelEmailEntry.b() as T;
  }

  //
  //
  //

  @override
  T copy<T extends Model>() {
    return (ModelEmailEntry.b()..updateWith(this)) as T;
  }

  //
  //
  //

  @override
  void updateWithJson(
    Map<String, dynamic>? otherData,
  ) {
    if (otherData != null && otherData.isNotEmpty) {
      final other = ModelEmailEntry.fromJson(otherData);
      if (other._createdAt != null) {
        this.createdAt = other._createdAt!;
      }
      if (other._createdBy != null) {
        this.createdBy = other._createdBy!;
      }
      if (other._description != null) {
        this.description = other._description!;
      }
      if (other._email != null) {
        this.email = other._email!;
      }
      if (other._id != null) {
        this.id = other._id!;
      }
      if (other._title != null) {
        this.title = other._title!;
      }
      if (other._titleSearchable != null) {
        this.titleSearchable = other._titleSearchable!;
      }
    }
  }

  //
  //
  //

  // createdAt.
  DateTime get createdAt => this._createdAt!;
  set createdAt(DateTime v) => this._createdAt = v;
  dynamic get $createdAt => (this._createdAt?.toUtc()?.toIso8601String())!;
  set $createdAt(v) => this._createdAt = () {
        final a = v;
        return a != null ? DateTime.tryParse(a)?.toUtc() : null;
      }();

  // createdBy.
  String get createdBy => this._createdBy!;
  set createdBy(String v) => this._createdBy = v;
  dynamic get $createdBy => (this._createdBy?.toString().trim().nullIfEmpty)!;
  set $createdBy(v) => this._createdBy = v?.toString().trim().nullIfEmpty;

  // description.
  String? get description => this._description;
  set description(String? v) => this._description = v;
  dynamic get $description => this._description?.toString().trim().nullIfEmpty;
  set $description(v) => this._description = v?.toString().trim().nullIfEmpty;

  // email.
  String? get email => this._email;
  set email(String? v) => this._email = v;
  dynamic get $email => this._email?.toString().trim().nullIfEmpty;
  set $email(v) => this._email = v?.toString().trim().nullIfEmpty;

  // id.
  String? get id => this._id;
  set id(String? v) => this._id = v;
  dynamic get $id => this._id?.toString().trim().nullIfEmpty;
  set $id(v) => this._id = v?.toString().trim().nullIfEmpty;

  // title.
  String? get title => this._title;
  set title(String? v) => this._title = v;
  dynamic get $title => this._title?.toString().trim().nullIfEmpty;
  set $title(v) => this._title = v?.toString().trim().nullIfEmpty;

  // titleSearchable.
  String? get titleSearchable => this._titleSearchable;
  set titleSearchable(String? v) => this._titleSearchable = v;
  dynamic get $titleSearchable => this
      ._titleSearchable
      ?.toString()
      .trim()
      .nullIfEmpty
      ?.toLowerCase()
      .replaceAll(r'[^\w]', '');
  set $titleSearchable(v) => this._titleSearchable =
      v?.toString().trim().nullIfEmpty?.toLowerCase().replaceAll(r'[^\w]', '');
}
