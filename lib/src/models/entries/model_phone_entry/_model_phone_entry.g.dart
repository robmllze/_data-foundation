//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: empty_constructor_bodies
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_this

part of 'model_phone_entry.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class ModelPhoneEntry extends _ModelPhoneEntry {
  //
  //
  //

  static const K_COUNTRY_CODE = 'country_code';
  static const K_CREATED_AT = 'created_at';
  static const K_CREATED_BY = 'created_by';
  static const K_DESCRIPTION = 'description';
  static const K_EXTENSION = 'extension';
  static const K_FULL_NUMBER = 'full_number';
  static const K_ID = 'id';
  static const K_NUMBER_WITHOUT_COUNTRY_CODE = 'number_without_country_code';
  static const K_TITLE = 'title';
  static const K_TITLE_SEARCHABLE = 'title_searchable';
  static const K_TYPE = 'type';

  static const CLASS = 'ModelPhoneEntry';

  @override
  String get $class => CLASS;

  String? _countryCode;
  DateTime? _createdAt;
  String? _createdBy;
  String? _description;
  String? _extension;
  String? _fullNumber;
  String? _id;
  String? _numberWithoutCountryCode;
  String? _title;
  String? _titleSearchable;
  String? _type;

  //
  //
  //

  ModelPhoneEntry.empty();

  //
  //
  //

  factory ModelPhoneEntry({
    String? countryCode,
    required DateTime createdAt,
    required String createdBy,
    String? description,
    String? extension,
    String? fullNumber,
    required String id,
    String? numberWithoutCountryCode,
    String? title,
    String? titleSearchable,
    String? type,
  }) {
    return ModelPhoneEntry.b(
      countryCode: countryCode,
      createdAt: createdAt,
      createdBy: createdBy,
      description: description,
      extension: extension,
      fullNumber: fullNumber,
      id: id,
      numberWithoutCountryCode: numberWithoutCountryCode,
      title: title,
      titleSearchable: titleSearchable,
      type: type,
    );
  }

  //
  //
  //

  ModelPhoneEntry.b({
    String? countryCode,
    DateTime? createdAt,
    String? createdBy,
    String? description,
    String? extension,
    String? fullNumber,
    String? id,
    String? numberWithoutCountryCode,
    String? title,
    String? titleSearchable,
    String? type,
  }) {
    assert(createdAt != null);
    assert(createdBy != null);
    assert(id != null);
    this._countryCode = countryCode;
    this._createdAt = createdAt;
    this._createdBy = createdBy;
    this._description = description;
    this._extension = extension;
    this._fullNumber = fullNumber;
    this._id = id;
    this._numberWithoutCountryCode = numberWithoutCountryCode;
    this._title = title;
    this._titleSearchable = titleSearchable;
    this._type = type;
  }

  //
  //
  //

  factory ModelPhoneEntry.from(
    Model? other,
  ) {
    return ModelPhoneEntry.fromJson(
      letAs<GenericModel>(other)?.data ?? other?.toJson(),
    );
  }

  //
  //
  //

  factory ModelPhoneEntry.of(
    ModelPhoneEntry? other,
  ) {
    return ModelPhoneEntry.fromJson(other?.toJson());
  }

  //
  //
  //

  factory ModelPhoneEntry.fromJsonString(
    String? source,
  ) {
    try {
      if (source != null && source.isNotEmpty) {
        final decoded = jsonDecode(source);
        return ModelPhoneEntry.fromJson(decoded);
      } else {
        return ModelPhoneEntry.empty();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelPhoneEntry.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return ModelPhoneEntry.empty()
        ..$countryCode = otherData?[K_COUNTRY_CODE]
        ..$createdAt = otherData?[K_CREATED_AT]
        ..$createdBy = otherData?[K_CREATED_BY]
        ..$description = otherData?[K_DESCRIPTION]
        ..$extension = otherData?[K_EXTENSION]
        ..$fullNumber = otherData?[K_FULL_NUMBER]
        ..$id = otherData?[K_ID]
        ..$numberWithoutCountryCode = otherData?[K_NUMBER_WITHOUT_COUNTRY_CODE]
        ..$title = otherData?[K_TITLE]
        ..$titleSearchable = otherData?[K_TITLE_SEARCHABLE]
        ..$type = otherData?[K_TYPE];
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelPhoneEntry.fromUri(
    Uri? uri,
  ) {
    try {
      if (uri != null && uri.path == CLASS) {
        return ModelPhoneEntry.fromJson(uri.queryParameters);
      } else {
        return ModelPhoneEntry.b();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  static ModelPhoneEntry? convert(
    Model? other,
  ) {
    return other != null ? ModelPhoneEntry.from(other) : null;
  }

  //
  //
  //

  static ModelPhoneEntry? fromPool({
    required Iterable<ModelPhoneEntry>? pool,
    required String? id,
  }) {
    return id != null ? pool?.firstWhereOrNull((e) => e.id == id) : null;
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final withNulls = <String, dynamic>{
        K_COUNTRY_CODE: this.$countryCode,
        K_CREATED_AT: this.$createdAt,
        K_CREATED_BY: this.$createdBy,
        K_DESCRIPTION: this.$description,
        K_EXTENSION: this.$extension,
        K_FULL_NUMBER: this.$fullNumber,
        K_ID: this.$id,
        K_NUMBER_WITHOUT_COUNTRY_CODE: this.$numberWithoutCountryCode,
        K_TITLE: this.$title,
        K_TITLE_SEARCHABLE: this.$titleSearchable,
        K_TYPE: this.$type,
      }.mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  @override
  T empty<T extends Model>() {
    return ModelPhoneEntry.b() as T;
  }

  //
  //
  //

  @override
  T copy<T extends Model>() {
    return (ModelPhoneEntry.b()..updateWith(this)) as T;
  }

  //
  //
  //

  @override
  void updateWithJson(
    Map<String, dynamic>? otherData,
  ) {
    if (otherData != null && otherData.isNotEmpty) {
      final other = ModelPhoneEntry.fromJson(otherData);
      if (other._countryCode != null) {
        this.countryCode = other._countryCode!;
      }
      if (other._createdAt != null) {
        this.createdAt = other._createdAt!;
      }
      if (other._createdBy != null) {
        this.createdBy = other._createdBy!;
      }
      if (other._description != null) {
        this.description = other._description!;
      }
      if (other._extension != null) {
        this.extension = other._extension!;
      }
      if (other._fullNumber != null) {
        this.fullNumber = other._fullNumber!;
      }
      if (other._id != null) {
        this.id = other._id!;
      }
      if (other._numberWithoutCountryCode != null) {
        this.numberWithoutCountryCode = other._numberWithoutCountryCode!;
      }
      if (other._title != null) {
        this.title = other._title!;
      }
      if (other._titleSearchable != null) {
        this.titleSearchable = other._titleSearchable!;
      }
      if (other._type != null) {
        this.type = other._type!;
      }
    }
  }

  //
  //
  //

  // countryCode.
  String? get countryCode => this._countryCode;
  set countryCode(String? v) => this._countryCode = v;
  dynamic get $countryCode => this._countryCode?.toString().trim().nullIfEmpty;
  set $countryCode(v) => this._countryCode = v?.toString().trim().nullIfEmpty;

  // createdAt.
  DateTime get createdAt => this._createdAt!;
  set createdAt(DateTime v) => this._createdAt = v;
  dynamic get $createdAt => (this._createdAt?.toUtc()?.toIso8601String())!;
  set $createdAt(v) => this._createdAt = () {
        final a = v;
        return a != null ? DateTime.tryParse(a)?.toUtc() : null;
      }();

  // createdBy.
  String get createdBy => this._createdBy!;
  set createdBy(String v) => this._createdBy = v;
  dynamic get $createdBy => (this._createdBy?.toString().trim().nullIfEmpty)!;
  set $createdBy(v) => this._createdBy = v?.toString().trim().nullIfEmpty;

  // description.
  String? get description => this._description;
  set description(String? v) => this._description = v;
  dynamic get $description => this._description?.toString().trim().nullIfEmpty;
  set $description(v) => this._description = v?.toString().trim().nullIfEmpty;

  // extension.
  String? get extension => this._extension;
  set extension(String? v) => this._extension = v;
  dynamic get $extension => this._extension?.toString().trim().nullIfEmpty;
  set $extension(v) => this._extension = v?.toString().trim().nullIfEmpty;

  // fullNumber.
  String? get fullNumber => this._fullNumber;
  set fullNumber(String? v) => this._fullNumber = v;
  dynamic get $fullNumber => this._fullNumber?.toString().trim().nullIfEmpty;
  set $fullNumber(v) => this._fullNumber = v?.toString().trim().nullIfEmpty;

  // id.
  String get id => this._id!;
  set id(String v) => this._id = v;
  dynamic get $id => (this._id?.toString().trim().nullIfEmpty)!;
  set $id(v) => this._id = v?.toString().trim().nullIfEmpty;

  // numberWithoutCountryCode.
  String? get numberWithoutCountryCode => this._numberWithoutCountryCode;
  set numberWithoutCountryCode(String? v) => this._numberWithoutCountryCode = v;
  dynamic get $numberWithoutCountryCode =>
      this._numberWithoutCountryCode?.toString().trim().nullIfEmpty;
  set $numberWithoutCountryCode(v) =>
      this._numberWithoutCountryCode = v?.toString().trim().nullIfEmpty;

  // title.
  String? get title => this._title;
  set title(String? v) => this._title = v;
  dynamic get $title => this._title?.toString().trim().nullIfEmpty;
  set $title(v) => this._title = v?.toString().trim().nullIfEmpty;

  // titleSearchable.
  String? get titleSearchable => this._titleSearchable;
  set titleSearchable(String? v) => this._titleSearchable = v;
  dynamic get $titleSearchable =>
      this._titleSearchable?.toString().trim().nullIfEmpty;
  set $titleSearchable(v) =>
      this._titleSearchable = v?.toString().trim().nullIfEmpty;

  // type.
  String? get type => this._type;
  set type(String? v) => this._type = v;
  dynamic get $type => this._type?.toString().trim().nullIfEmpty;
  set $type(v) => this._type = v?.toString().trim().nullIfEmpty;
}
