//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: empty_constructor_bodies
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_this

part of 'model_phone_entry.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class ModelPhoneEntry extends _ModelPhoneEntry {
  //
  //
  //

  static const CLASS = 'ModelPhoneEntry';
  static const MODEL_ID = 'model_phone_entry';

  static const K_COUNTRY_CODE = 'country_code';
  static const K_DESCRIPTION = 'description';
  static const K_EXTENSION = 'extension';
  static const K_FULL_NUMBER = 'full_number';
  static const K_ID = 'id';
  static const K_NUMBER_WITHOUT_COUNTRY_CODE = 'number_without_country_code';
  static const K_TITLE = 'title';
  static const K_TITLE_SEARCHABLE = 'title_searchable';
  static const K_TYPE = 'type';
  static const K_WHEN_CREATED = 'when_created';

  String? countryCode;
  String? description;
  String? extension;
  String? fullNumber;
  String? numberWithoutCountryCode;
  String? title;
  String? titleSearchable;
  String? type;
  Map<String, DateTime>? whenCreated;

  //
  //
  //

  ModelPhoneEntry({
    String? id,
    this.countryCode,
    this.description,
    this.extension,
    this.fullNumber,
    this.numberWithoutCountryCode,
    this.title,
    this.titleSearchable,
    this.type,
    this.whenCreated,
  }) {
    this.id = id;
  }

  //
  //
  //

  ModelPhoneEntry.unsafe({
    String? id,
    this.countryCode,
    this.description,
    this.extension,
    this.fullNumber,
    this.numberWithoutCountryCode,
    this.title,
    this.titleSearchable,
    this.type,
    this.whenCreated,
  }) {
    this.id = id;
  }

  //
  //
  //

  factory ModelPhoneEntry.from(
    Model? other,
  ) {
    return ModelPhoneEntry.fromJson(
      other is GenericModel ? other.data : other?.toJson(),
    );
  }

  //
  //
  //

  factory ModelPhoneEntry.of(
    ModelPhoneEntry? other,
  ) {
    return ModelPhoneEntry.fromJson(other?.toJson());
  }

  //
  //
  //

  factory ModelPhoneEntry.fromJsonString(
    String? source,
  ) {
    try {
      if (source != null && source.isNotEmpty) {
        final decoded = jsonDecode(source);
        return ModelPhoneEntry.fromJson(decoded);
      } else {
        return ModelPhoneEntry.unsafe();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelPhoneEntry.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return ModelPhoneEntry.unsafe(
        countryCode: otherData?[K_COUNTRY_CODE]?.toString().trim().nullIfEmpty,
        description: otherData?[K_DESCRIPTION]?.toString().trim().nullIfEmpty,
        extension: otherData?[K_EXTENSION]?.toString().trim().nullIfEmpty,
        fullNumber: otherData?[K_FULL_NUMBER]?.toString().trim().nullIfEmpty,
        id: otherData?[K_ID]?.toString().trim().nullIfEmpty,
        numberWithoutCountryCode: otherData?[K_NUMBER_WITHOUT_COUNTRY_CODE]
            ?.toString()
            .trim()
            .nullIfEmpty,
        title: otherData?[K_TITLE]?.toString().trim().nullIfEmpty,
        titleSearchable: otherData?[K_TITLE_SEARCHABLE]
            ?.toString()
            .trim()
            .nullIfEmpty
            ?.toLowerCase(),
        type: otherData?[K_TYPE]?.toString().trim().nullIfEmpty,
        whenCreated: letMap(otherData?[K_WHEN_CREATED])
            ?.map(
              (final p0, final p1) => MapEntry(
                p0?.toString().trim().nullIfEmpty,
                () {
                  final a = p1;
                  return a != null ? DateTime.tryParse(a)?.toUtc() : null;
                }(),
              ),
            )
            .nonNulls
            .nullIfEmpty
            ?.cast(),
      );
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelPhoneEntry.fromUri(
    Uri? uri,
  ) {
    try {
      if (uri != null && uri.path == MODEL_ID) {
        return ModelPhoneEntry.fromJson(uri.queryParameters);
      } else {
        return ModelPhoneEntry.unsafe();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  static ModelPhoneEntry? convert(
    Model? other,
  ) {
    return other != null ? ModelPhoneEntry.from(other) : null;
  }

  //
  //
  //

  static ModelPhoneEntry? fromPool({
    required Iterable<ModelPhoneEntry>? pool,
    required String? id,
  }) {
    return id != null ? pool?.firstWhereOrNull((e) => e.id == id) : null;
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final withNulls = <String, dynamic>{
        K_COUNTRY_CODE: countryCode?.toString().trim().nullIfEmpty,
        K_DESCRIPTION: description?.toString().trim().nullIfEmpty,
        K_EXTENSION: extension?.toString().trim().nullIfEmpty,
        K_FULL_NUMBER: fullNumber?.toString().trim().nullIfEmpty,
        K_ID: id?.toString().trim().nullIfEmpty,
        K_NUMBER_WITHOUT_COUNTRY_CODE:
            numberWithoutCountryCode?.toString().trim().nullIfEmpty,
        K_TITLE: title?.toString().trim().nullIfEmpty,
        K_TITLE_SEARCHABLE:
            titleSearchable?.toString().trim().nullIfEmpty?.toLowerCase(),
        K_TYPE: type?.toString().trim().nullIfEmpty,
        K_WHEN_CREATED: whenCreated
            ?.map(
              (final p0, final p1) => MapEntry(
                p0?.toString().trim().nullIfEmpty,
                p1?.toUtc()?.toIso8601String(),
              ),
            )
            .nonNulls
            .nullIfEmpty,
      }.mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  @override
  T empty<T extends Model>() {
    return ModelPhoneEntry.unsafe() as T;
  }

  //
  //
  //

  @override
  T copy<T extends Model>() {
    return (ModelPhoneEntry.unsafe()..updateWith(this)) as T;
  }

  //
  //
  //

  @override
  void updateWithJson(
    Map<String, dynamic>? otherData,
  ) {
    if (otherData != null && otherData.isNotEmpty) {
      final other = ModelPhoneEntry.fromJson(otherData);
      other.countryCode != null ? this.countryCode = other.countryCode : null;
      other.description != null ? this.description = other.description : null;
      other.extension != null ? this.extension = other.extension : null;
      other.fullNumber != null ? this.fullNumber = other.fullNumber : null;
      other.id != null ? this.id = other.id : null;
      other.numberWithoutCountryCode != null
          ? this.numberWithoutCountryCode = other.numberWithoutCountryCode
          : null;
      other.title != null ? this.title = other.title : null;
      other.titleSearchable != null
          ? this.titleSearchable = other.titleSearchable
          : null;
      other.type != null ? this.type = other.type : null;
      other.whenCreated != null ? this.whenCreated = other.whenCreated : null;
    }
  }

  //
  //
  //

  String get modelId => MODEL_ID;
}
