//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: empty_constructor_bodies
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_this

part of 'model_address_entry.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class ModelAddressEntry extends _ModelAddressEntry {
  //
  //
  //

  static const CLASS = 'ModelAddressEntry';
  static const MODEL_ID = 'model_address_entry';

  static const K_ADDRESS_LINE_1 = 'address_line_1';
  static const K_ADDRESS_LINE_2 = 'address_line_2';
  static const K_CITY = 'city';
  static const K_COUNTRY = 'country';
  static const K_CREATED_AT = 'created_at';
  static const K_CREATED_BY = 'created_by';
  static const K_ID = 'id';
  static const K_NAME = 'name';
  static const K_NOTES = 'notes';
  static const K_POSTAL_CODE = 'postal_code';
  static const K_STATE_OR_PROVINCE = 'state_or_province';
  static const K_TITLE = 'title';
  static const K_TITLE_SEARCHABLE = 'title_searchable';

  String? addressLine1;
  String? addressLine2;
  String? city;
  String? country;
  DateTime? createdAt;
  String? createdBy;
  String? name;
  String? notes;
  String? postalCode;
  String? stateOrProvince;
  String? title;
  String? titleSearchable;

  //
  //
  //

  ModelAddressEntry({
    String? id,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.country,
    this.createdAt,
    this.createdBy,
    this.name,
    this.notes,
    this.postalCode,
    this.stateOrProvince,
    this.title,
    this.titleSearchable,
  }) {
    this.id = id;
  }

  //
  //
  //

  ModelAddressEntry.unsafe({
    String? id,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.country,
    this.createdAt,
    this.createdBy,
    this.name,
    this.notes,
    this.postalCode,
    this.stateOrProvince,
    this.title,
    this.titleSearchable,
  }) {
    this.id = id;
  }

  //
  //
  //

  factory ModelAddressEntry.from(
    Model? other,
  ) {
    return ModelAddressEntry.fromJson(
      other is GenericModel ? other.data : other?.toJson(),
    );
  }

  //
  //
  //

  factory ModelAddressEntry.of(
    ModelAddressEntry? other,
  ) {
    return ModelAddressEntry.fromJson(other?.toJson());
  }

  //
  //
  //

  factory ModelAddressEntry.fromJsonString(
    String? source,
  ) {
    try {
      if (source != null && source.isNotEmpty) {
        final decoded = jsonDecode(source);
        return ModelAddressEntry.fromJson(decoded);
      } else {
        return ModelAddressEntry.unsafe();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelAddressEntry.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return ModelAddressEntry.unsafe(
        addressLine1:
            otherData?[K_ADDRESS_LINE_1]?.toString().trim().nullIfEmpty,
        addressLine2:
            otherData?[K_ADDRESS_LINE_2]?.toString().trim().nullIfEmpty,
        city: otherData?[K_CITY]?.toString().trim().nullIfEmpty,
        country: otherData?[K_COUNTRY]?.toString().trim().nullIfEmpty,
        createdAt: () {
          final a = otherData?[K_CREATED_AT];
          return a != null ? DateTime.tryParse(a)?.toUtc() : null;
        }(),
        createdBy: otherData?[K_CREATED_BY]?.toString().trim().nullIfEmpty,
        id: otherData?[K_ID]?.toString().trim().nullIfEmpty,
        name: otherData?[K_NAME]?.toString().trim().nullIfEmpty,
        notes: otherData?[K_NOTES]?.toString().trim().nullIfEmpty,
        postalCode: otherData?[K_POSTAL_CODE]?.toString().trim().nullIfEmpty,
        stateOrProvince:
            otherData?[K_STATE_OR_PROVINCE]?.toString().trim().nullIfEmpty,
        title: otherData?[K_TITLE]?.toString().trim().nullIfEmpty,
        titleSearchable: otherData?[K_TITLE_SEARCHABLE]
            ?.toString()
            .trim()
            .nullIfEmpty
            ?.toLowerCase()
            .replaceAll(r'[^\w]', ' '),
      );
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelAddressEntry.fromUri(
    Uri? uri,
  ) {
    try {
      if (uri != null && uri.path == MODEL_ID) {
        return ModelAddressEntry.fromJson(uri.queryParameters);
      } else {
        return ModelAddressEntry.unsafe();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  static ModelAddressEntry? convert(
    Model? other,
  ) {
    return other != null ? ModelAddressEntry.from(other) : null;
  }

  //
  //
  //

  static ModelAddressEntry? fromPool({
    required Iterable<ModelAddressEntry>? pool,
    required String? id,
  }) {
    return id != null ? pool?.firstWhereOrNull((e) => e.id == id) : null;
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final withNulls = <String, dynamic>{
        K_ADDRESS_LINE_1: addressLine1?.toString().trim().nullIfEmpty,
        K_ADDRESS_LINE_2: addressLine2?.toString().trim().nullIfEmpty,
        K_CITY: city?.toString().trim().nullIfEmpty,
        K_COUNTRY: country?.toString().trim().nullIfEmpty,
        K_CREATED_AT: createdAt?.toUtc()?.toIso8601String(),
        K_CREATED_BY: createdBy?.toString().trim().nullIfEmpty,
        K_ID: id?.toString().trim().nullIfEmpty,
        K_NAME: name?.toString().trim().nullIfEmpty,
        K_NOTES: notes?.toString().trim().nullIfEmpty,
        K_POSTAL_CODE: postalCode?.toString().trim().nullIfEmpty,
        K_STATE_OR_PROVINCE: stateOrProvince?.toString().trim().nullIfEmpty,
        K_TITLE: title?.toString().trim().nullIfEmpty,
        K_TITLE_SEARCHABLE: titleSearchable
            ?.toString()
            .trim()
            .nullIfEmpty
            ?.toLowerCase()
            .replaceAll(r'[^\w]', ' '),
      }.mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  @override
  T empty<T extends Model>() {
    return ModelAddressEntry.unsafe() as T;
  }

  //
  //
  //

  @override
  T copy<T extends Model>() {
    return (ModelAddressEntry.unsafe()..updateWith(this)) as T;
  }

  //
  //
  //

  @override
  void updateWithJson(
    Map<String, dynamic>? otherData,
  ) {
    if (otherData != null && otherData.isNotEmpty) {
      final other = ModelAddressEntry.fromJson(otherData);
      other.addressLine1 != null
          ? this.addressLine1 = other.addressLine1
          : null;
      other.addressLine2 != null
          ? this.addressLine2 = other.addressLine2
          : null;
      other.city != null ? this.city = other.city : null;
      other.country != null ? this.country = other.country : null;
      other.createdAt != null ? this.createdAt = other.createdAt : null;
      other.createdBy != null ? this.createdBy = other.createdBy : null;
      other.id != null ? this.id = other.id : null;
      other.name != null ? this.name = other.name : null;
      other.notes != null ? this.notes = other.notes : null;
      other.postalCode != null ? this.postalCode = other.postalCode : null;
      other.stateOrProvince != null
          ? this.stateOrProvince = other.stateOrProvince
          : null;
      other.title != null ? this.title = other.title : null;
      other.titleSearchable != null
          ? this.titleSearchable = other.titleSearchable
          : null;
    }
  }

  //
  //
  //

  String get modelId => MODEL_ID;
}
