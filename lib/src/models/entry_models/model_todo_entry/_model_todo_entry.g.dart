//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: empty_constructor_bodies
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_this

part of 'model_todo_entry.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class ModelTodoEntry extends _ModelTodoEntry {
  //
  //
  //

  static const K_CREATED_AT = 'created_at';
  static const K_CREATED_BY = 'created_by';
  static const K_DESCRIPTION = 'description';
  static const K_ID = 'id';
  static const K_LAST_MODIFIED_AT = 'last_modified_at';
  static const K_LAST_MODIFIED_BY = 'last_modified_by';
  static const K_STATUS = 'status';
  static const K_TITLE = 'title';
  static const K_TITLE_SEARCHABLE = 'title_searchable';

  static const CLASS = 'ModelTodoEntry';

  @override
  String get $class => CLASS;

  DateTime? createdAt;
  String? createdBy;
  String? description;
  String? id;
  DateTime? lastModifiedAt;
  String? lastModifiedBy;
  Map<DateTime, String>? status;
  String? title;
  String? titleSearchable;

  //
  //
  //

  ModelTodoEntry.empty();

  //
  //
  //

  factory ModelTodoEntry({
    DateTime? createdAt,
    String? createdBy,
    String? description,
    String? id,
    DateTime? lastModifiedAt,
    String? lastModifiedBy,
    Map<DateTime, String>? status,
    String? title,
    String? titleSearchable,
  }) {
    return ModelTodoEntry.b(
      createdAt: createdAt,
      createdBy: createdBy,
      description: description,
      id: id,
      lastModifiedAt: lastModifiedAt,
      lastModifiedBy: lastModifiedBy,
      status: status,
      title: title,
      titleSearchable: titleSearchable,
    );
  }

  //
  //
  //

  ModelTodoEntry.b({
    this.createdAt,
    this.createdBy,
    this.description,
    this.id,
    this.lastModifiedAt,
    this.lastModifiedBy,
    this.status,
    this.title,
    this.titleSearchable,
  }) {}

  //
  //
  //

  factory ModelTodoEntry.from(
    Model? other,
  ) {
    return ModelTodoEntry.fromJson(
      letAs<GenericModel>(other)?.data ?? other?.toJson(),
    );
  }

  //
  //
  //

  static ModelTodoEntry? fromOrNull(
    Model? other,
  ) {
    return other != null ? ModelTodoEntry.from(other) : null;
  }

  //
  //
  //

  factory ModelTodoEntry.of(
    ModelTodoEntry? other,
  ) {
    return ModelTodoEntry.fromJson(other?.toJson());
  }

  //
  //
  //

  factory ModelTodoEntry.fromJsonString(
    String? source,
  ) {
    try {
      if (source != null && source.isNotEmpty) {
        final decoded = jsonDecode(source);
        return ModelTodoEntry.fromJson(decoded);
      } else {
        return ModelTodoEntry.empty();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelTodoEntry.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return ModelTodoEntry.empty()
        ..$createdAt = otherData?[K_CREATED_AT]
        ..$createdBy = otherData?[K_CREATED_BY]
        ..$description = otherData?[K_DESCRIPTION]
        ..$id = otherData?[K_ID]
        ..$lastModifiedAt = otherData?[K_LAST_MODIFIED_AT]
        ..$lastModifiedBy = otherData?[K_LAST_MODIFIED_BY]
        ..$status = otherData?[K_STATUS]
        ..$title = otherData?[K_TITLE]
        ..$titleSearchable = otherData?[K_TITLE_SEARCHABLE];
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelTodoEntry.fromUri(
    Uri? uri,
  ) {
    try {
      if (uri != null && uri.path == CLASS) {
        return ModelTodoEntry.fromJson(uri.queryParameters);
      } else {
        return ModelTodoEntry.b();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final withNulls = <String, dynamic>{
        K_CREATED_AT: this.$createdAt,
        K_CREATED_BY: this.$createdBy,
        K_DESCRIPTION: this.$description,
        K_ID: this.$id,
        K_LAST_MODIFIED_AT: this.$lastModifiedAt,
        K_LAST_MODIFIED_BY: this.$lastModifiedBy,
        K_STATUS: this.$status,
        K_TITLE: this.$title,
        K_TITLE_SEARCHABLE: this.$titleSearchable,
      }.mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  @override
  T empty<T extends Model>() {
    return ModelTodoEntry.b() as T;
  }

  //
  //
  //

  @override
  T copy<T extends Model>() {
    return (ModelTodoEntry.b()..updateWith(this)) as T;
  }

  //
  //
  //

  @override
  void updateWithJson(
    Map<String, dynamic>? otherData,
  ) {
    if (otherData != null && otherData.isNotEmpty) {
      final other = ModelTodoEntry.fromJson(otherData);
      if (other.createdAt != null) {
        this.createdAt = other.createdAt!;
      }
      if (other.createdBy != null) {
        this.createdBy = other.createdBy!;
      }
      if (other.description != null) {
        this.description = other.description!;
      }
      if (other.id != null) {
        this.id = other.id!;
      }
      if (other.lastModifiedAt != null) {
        this.lastModifiedAt = other.lastModifiedAt!;
      }
      if (other.lastModifiedBy != null) {
        this.lastModifiedBy = other.lastModifiedBy!;
      }
      if (other.status != null) {
        this.status = other.status!;
      }
      if (other.title != null) {
        this.title = other.title!;
      }
      if (other.titleSearchable != null) {
        this.titleSearchable = other.titleSearchable!;
      }
    }
  }

  //
  //
  //

  // createdAt.
  DateTime? get createdAtField => this.createdAt;
  set createdAtField(DateTime? v) => this.createdAt = v;
  @protected
  dynamic get $createdAt => this.createdAt?.toUtc()?.toIso8601String();
  @protected
  set $createdAt(v) => this.createdAt = () {
        final a = v;
        return a != null ? DateTime.tryParse(a)?.toUtc() : null;
      }();

  // createdBy.
  String? get createdByField => this.createdBy;
  set createdByField(String? v) => this.createdBy = v;
  @protected
  dynamic get $createdBy => this.createdBy?.toString().trim().nullIfEmpty;
  @protected
  set $createdBy(v) => this.createdBy = v?.toString().trim().nullIfEmpty;

  // description.
  String? get descriptionField => this.description;
  set descriptionField(String? v) => this.description = v;
  @protected
  dynamic get $description => this.description?.toString().trim().nullIfEmpty;
  @protected
  set $description(v) => this.description = v?.toString().trim().nullIfEmpty;

  // id.
  String? get idField => this.id;
  set idField(String? v) => this.id = v;
  @protected
  dynamic get $id => this.id?.toString().trim().nullIfEmpty;
  @protected
  set $id(v) => this.id = v?.toString().trim().nullIfEmpty;

  // lastModifiedAt.
  DateTime? get lastModifiedAtField => this.lastModifiedAt;
  set lastModifiedAtField(DateTime? v) => this.lastModifiedAt = v;
  @protected
  dynamic get $lastModifiedAt =>
      this.lastModifiedAt?.toUtc()?.toIso8601String();
  @protected
  set $lastModifiedAt(v) => this.lastModifiedAt = () {
        final a = v;
        return a != null ? DateTime.tryParse(a)?.toUtc() : null;
      }();

  // lastModifiedBy.
  String? get lastModifiedByField => this.lastModifiedBy;
  set lastModifiedByField(String? v) => this.lastModifiedBy = v;
  @protected
  dynamic get $lastModifiedBy =>
      this.lastModifiedBy?.toString().trim().nullIfEmpty;
  @protected
  set $lastModifiedBy(v) =>
      this.lastModifiedBy = v?.toString().trim().nullIfEmpty;

  // status.
  Map<DateTime, String>? get statusField => this.status;
  set statusField(Map<DateTime, String>? v) => this.status = v;
  @protected
  dynamic get $status => this
      .status
      ?.map(
        (p0, p1) => MapEntry(
          p0?.toUtc()?.toIso8601String(),
          p1?.toString().trim().nullIfEmpty,
        ),
      )
      .nonNulls
      .nullIfEmpty;
  @protected
  set $status(v) => this.status = letMap(v)
      ?.map(
        (p0, p1) => MapEntry(
          () {
            final a = p0;
            return a != null ? DateTime.tryParse(a)?.toUtc() : null;
          }(),
          p1?.toString().trim().nullIfEmpty,
        ),
      )
      .nonNulls
      .nullIfEmpty
      ?.cast();

  // title.
  String? get titleField => this.title;
  set titleField(String? v) => this.title = v;
  @protected
  dynamic get $title => this.title?.toString().trim().nullIfEmpty;
  @protected
  set $title(v) => this.title = v?.toString().trim().nullIfEmpty;

  // titleSearchable.
  String? get titleSearchableField => this.titleSearchable;
  set titleSearchableField(String? v) => this.titleSearchable = v;
  @protected
  dynamic get $titleSearchable => this
      .titleSearchable
      ?.toString()
      .trim()
      .nullIfEmpty
      ?.toLowerCase()
      .replaceAll(r'[^\w]', '');
  @protected
  set $titleSearchable(v) => this.titleSearchable =
      v?.toString().trim().nullIfEmpty?.toLowerCase().replaceAll(r'[^\w]', '');
}
