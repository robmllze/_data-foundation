//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: empty_constructor_bodies
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_this

part of 'model_connection_permissions.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class ModelConnectionPermissions extends Model {
  //
  //
  //

  static const K_EDITOR_PERMIT = 'editor_permit';
  static const K_EDITOR_REQUEST = 'editor_request';
  static const K_MESSAGING_PERMIT = 'messaging_permit';
  static const K_MESSAGING_REQUEST = 'messaging_request';
  static const K_MINIMAL_PERMIT = 'minimal_permit';
  static const K_MINIMAL_REQUEST = 'minimal_request';
  static const K_NOTIFICATION_PERMIT = 'notification_permit';
  static const K_NOTIFICATION_REQUEST = 'notification_request';
  static const K_READ_ONLY_PERMIT = 'read_only_permit';
  static const K_READ_ONLY_REQUEST = 'read_only_request';

  static const CLASS = 'ModelConnectionPermissions';

  @override
  String get $class => CLASS;

  bool? _editorPermit;
  bool? _editorRequest;
  bool? _messagingPermit;
  bool? _messagingRequest;
  bool? _minimalPermit;
  bool? _minimalRequest;
  bool? _notificationPermit;
  bool? _notificationRequest;
  bool? _readOnlyPermit;
  bool? _readOnlyRequest;

  //
  //
  //

  ModelConnectionPermissions.empty();

  //
  //
  //

  factory ModelConnectionPermissions({
    bool? editorPermit,
    bool? editorRequest,
    bool? messagingPermit,
    bool? messagingRequest,
    bool? minimalPermit,
    bool? minimalRequest,
    bool? notificationPermit,
    bool? notificationRequest,
    bool? readOnlyPermit,
    bool? readOnlyRequest,
  }) {
    return ModelConnectionPermissions.b(
      editorPermit: editorPermit,
      editorRequest: editorRequest,
      messagingPermit: messagingPermit,
      messagingRequest: messagingRequest,
      minimalPermit: minimalPermit,
      minimalRequest: minimalRequest,
      notificationPermit: notificationPermit,
      notificationRequest: notificationRequest,
      readOnlyPermit: readOnlyPermit,
      readOnlyRequest: readOnlyRequest,
    );
  }

  //
  //
  //

  ModelConnectionPermissions.b({
    bool? editorPermit,
    bool? editorRequest,
    bool? messagingPermit,
    bool? messagingRequest,
    bool? minimalPermit,
    bool? minimalRequest,
    bool? notificationPermit,
    bool? notificationRequest,
    bool? readOnlyPermit,
    bool? readOnlyRequest,
  }) {
    this._editorPermit = editorPermit;
    this._editorRequest = editorRequest;
    this._messagingPermit = messagingPermit;
    this._messagingRequest = messagingRequest;
    this._minimalPermit = minimalPermit;
    this._minimalRequest = minimalRequest;
    this._notificationPermit = notificationPermit;
    this._notificationRequest = notificationRequest;
    this._readOnlyPermit = readOnlyPermit;
    this._readOnlyRequest = readOnlyRequest;
  }

  //
  //
  //

  factory ModelConnectionPermissions.from(
    Model? other,
  ) {
    return ModelConnectionPermissions.fromJson(
      letAs<GenericModel>(other)?.data ?? other?.toJson(),
    );
  }

  //
  //
  //

  static ModelConnectionPermissions? fromOrNull(
    Model? other,
  ) {
    return other != null ? ModelConnectionPermissions.from(other) : null;
  }

  //
  //
  //

  factory ModelConnectionPermissions.of(
    ModelConnectionPermissions? other,
  ) {
    return ModelConnectionPermissions.fromJson(other?.toJson());
  }

  //
  //
  //

  factory ModelConnectionPermissions.fromJsonString(
    String? source,
  ) {
    try {
      if (source != null && source.isNotEmpty) {
        final decoded = jsonDecode(source);
        return ModelConnectionPermissions.fromJson(decoded);
      } else {
        return ModelConnectionPermissions.empty();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelConnectionPermissions.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return ModelConnectionPermissions.empty()
        ..$editorPermit = otherData?[K_EDITOR_PERMIT]
        ..$editorRequest = otherData?[K_EDITOR_REQUEST]
        ..$messagingPermit = otherData?[K_MESSAGING_PERMIT]
        ..$messagingRequest = otherData?[K_MESSAGING_REQUEST]
        ..$minimalPermit = otherData?[K_MINIMAL_PERMIT]
        ..$minimalRequest = otherData?[K_MINIMAL_REQUEST]
        ..$notificationPermit = otherData?[K_NOTIFICATION_PERMIT]
        ..$notificationRequest = otherData?[K_NOTIFICATION_REQUEST]
        ..$readOnlyPermit = otherData?[K_READ_ONLY_PERMIT]
        ..$readOnlyRequest = otherData?[K_READ_ONLY_REQUEST];
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelConnectionPermissions.fromUri(
    Uri? uri,
  ) {
    try {
      if (uri != null && uri.path == CLASS) {
        return ModelConnectionPermissions.fromJson(uri.queryParameters);
      } else {
        return ModelConnectionPermissions.b();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final withNulls = <String, dynamic>{
        K_EDITOR_PERMIT: this.$editorPermit,
        K_EDITOR_REQUEST: this.$editorRequest,
        K_MESSAGING_PERMIT: this.$messagingPermit,
        K_MESSAGING_REQUEST: this.$messagingRequest,
        K_MINIMAL_PERMIT: this.$minimalPermit,
        K_MINIMAL_REQUEST: this.$minimalRequest,
        K_NOTIFICATION_PERMIT: this.$notificationPermit,
        K_NOTIFICATION_REQUEST: this.$notificationRequest,
        K_READ_ONLY_PERMIT: this.$readOnlyPermit,
        K_READ_ONLY_REQUEST: this.$readOnlyRequest,
      }.mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  @override
  T empty<T extends Model>() {
    return ModelConnectionPermissions.b() as T;
  }

  //
  //
  //

  @override
  T copy<T extends Model>() {
    return (ModelConnectionPermissions.b()..updateWith(this)) as T;
  }

  //
  //
  //

  @override
  void updateWithJson(
    Map<String, dynamic>? otherData,
  ) {
    if (otherData != null && otherData.isNotEmpty) {
      final other = ModelConnectionPermissions.fromJson(otherData);
      if (other._editorPermit != null) {
        this.editorPermit = other._editorPermit!;
      }
      if (other._editorRequest != null) {
        this.editorRequest = other._editorRequest!;
      }
      if (other._messagingPermit != null) {
        this.messagingPermit = other._messagingPermit!;
      }
      if (other._messagingRequest != null) {
        this.messagingRequest = other._messagingRequest!;
      }
      if (other._minimalPermit != null) {
        this.minimalPermit = other._minimalPermit!;
      }
      if (other._minimalRequest != null) {
        this.minimalRequest = other._minimalRequest!;
      }
      if (other._notificationPermit != null) {
        this.notificationPermit = other._notificationPermit!;
      }
      if (other._notificationRequest != null) {
        this.notificationRequest = other._notificationRequest!;
      }
      if (other._readOnlyPermit != null) {
        this.readOnlyPermit = other._readOnlyPermit!;
      }
      if (other._readOnlyRequest != null) {
        this.readOnlyRequest = other._readOnlyRequest!;
      }
    }
  }

  //
  //
  //

  // editorPermit.
  bool? get editorPermit => this._editorPermit;
  set editorPermit(bool? v) => this._editorPermit = v;
  dynamic get $editorPermit => this._editorPermit;
  set $editorPermit(v) => this._editorPermit = letBool(v);

  // editorRequest.
  bool? get editorRequest => this._editorRequest;
  set editorRequest(bool? v) => this._editorRequest = v;
  dynamic get $editorRequest => this._editorRequest;
  set $editorRequest(v) => this._editorRequest = letBool(v);

  // messagingPermit.
  bool? get messagingPermit => this._messagingPermit;
  set messagingPermit(bool? v) => this._messagingPermit = v;
  dynamic get $messagingPermit => this._messagingPermit;
  set $messagingPermit(v) => this._messagingPermit = letBool(v);

  // messagingRequest.
  bool? get messagingRequest => this._messagingRequest;
  set messagingRequest(bool? v) => this._messagingRequest = v;
  dynamic get $messagingRequest => this._messagingRequest;
  set $messagingRequest(v) => this._messagingRequest = letBool(v);

  // minimalPermit.
  bool? get minimalPermit => this._minimalPermit;
  set minimalPermit(bool? v) => this._minimalPermit = v;
  dynamic get $minimalPermit => this._minimalPermit;
  set $minimalPermit(v) => this._minimalPermit = letBool(v);

  // minimalRequest.
  bool? get minimalRequest => this._minimalRequest;
  set minimalRequest(bool? v) => this._minimalRequest = v;
  dynamic get $minimalRequest => this._minimalRequest;
  set $minimalRequest(v) => this._minimalRequest = letBool(v);

  // notificationPermit.
  bool? get notificationPermit => this._notificationPermit;
  set notificationPermit(bool? v) => this._notificationPermit = v;
  dynamic get $notificationPermit => this._notificationPermit;
  set $notificationPermit(v) => this._notificationPermit = letBool(v);

  // notificationRequest.
  bool? get notificationRequest => this._notificationRequest;
  set notificationRequest(bool? v) => this._notificationRequest = v;
  dynamic get $notificationRequest => this._notificationRequest;
  set $notificationRequest(v) => this._notificationRequest = letBool(v);

  // readOnlyPermit.
  bool? get readOnlyPermit => this._readOnlyPermit;
  set readOnlyPermit(bool? v) => this._readOnlyPermit = v;
  dynamic get $readOnlyPermit => this._readOnlyPermit;
  set $readOnlyPermit(v) => this._readOnlyPermit = letBool(v);

  // readOnlyRequest.
  bool? get readOnlyRequest => this._readOnlyRequest;
  set readOnlyRequest(bool? v) => this._readOnlyRequest = v;
  dynamic get $readOnlyRequest => this._readOnlyRequest;
  set $readOnlyRequest(v) => this._readOnlyRequest = letBool(v);
}
