//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: empty_constructor_bodies
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_this

part of 'model_invitation_link_details.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class ModelInvitationLinkDetails extends Model {
  //
  //
  //

  static const CLASS = 'ModelInvitationLinkDetails';
  static const MODEL_ID = 'model_invitation_link_details';

  static const K_DEF = 'def';
  static const K_DEF_TYPE = 'def_type';
  static const K_FROM = 'from';
  static const K_ID = 'id';
  static const K_INVITATION_LINK = 'invitation_link';
  static const K_STATUS = 'status';
  static const K_TO = 'to';
  static const K_WHEN_CREATED = 'when_created';
  static const K_WHEN_EXPIRE = 'when_expire';

  GenericModel? def;
  InvitationDefType? defType;
  ModelUserPub? from;
  Uri? invitationLink;
  InvitationStatusType? status;
  Set<ModelUserPub>? to;
  DateTime? whenCreated;
  DateTime? whenExpire;

  //
  //
  //

  ModelInvitationLinkDetails({
    String? id,
    this.def,
    this.defType,
    this.from,
    this.invitationLink,
    this.status,
    this.to,
    this.whenCreated,
    this.whenExpire,
  }) {
    this.id = id;
  }

  //
  //
  //

  ModelInvitationLinkDetails.unsafe({
    String? id,
    this.def,
    this.defType,
    this.from,
    this.invitationLink,
    this.status,
    this.to,
    this.whenCreated,
    this.whenExpire,
  }) {
    this.id = id;
  }

  //
  //
  //

  factory ModelInvitationLinkDetails.from(
    Model? other,
  ) {
    if (other is GenericModel) {
      return ModelInvitationLinkDetails.fromGenericModel(other);
    } else {
      return ModelInvitationLinkDetails.unsafe()..updateWith(other);
    }
  }

  //
  //
  //

  factory ModelInvitationLinkDetails.of(
    ModelInvitationLinkDetails? other,
  ) {
    return ModelInvitationLinkDetails.unsafe()..updateWith(other);
  }

  //
  //
  //

  factory ModelInvitationLinkDetails.fromJsonString(
    String? source,
  ) {
    try {
      if (source != null && source.isNotEmpty) {
        final decoded = jsonDecode(source);
        return ModelInvitationLinkDetails.fromJson(decoded);
      } else {
        return ModelInvitationLinkDetails.unsafe();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelInvitationLinkDetails.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return ModelInvitationLinkDetails.unsafe(
        def: () {
          final a = letMap<String, dynamic>(otherData?[K_DEF]);
          return a != null ? GenericModel.fromJson(a) : null;
        }(),
        defType: InvitationDefType.values
            .valueOf(letAs<String>(otherData?[K_DEF_TYPE])),
        from: () {
          final a = letMap<String, dynamic>(otherData?[K_FROM]);
          return a != null ? ModelUserPub.fromJson(a) : null;
        }(),
        id: otherData?[K_ID]?.toString().trim().nullIfEmpty,
        invitationLink: () {
          final a = otherData?[K_INVITATION_LINK];
          return a is String ? a.trim().nullIfEmpty?.toUriOrNull() : null;
        }(),
        status: InvitationStatusType.values
            .valueOf(letAs<String>(otherData?[K_STATUS])),
        to: letSet(otherData?[K_TO])
            ?.map(
              (final p0) => () {
                final a = letMap<String, dynamic>(p0);
                return a != null ? ModelUserPub.fromJson(a) : null;
              }(),
            )
            .nonNulls
            .nullIfEmpty
            ?.toSet()
            .cast(),
        whenCreated: () {
          final a = otherData?[K_WHEN_CREATED];
          return a != null ? DateTime.tryParse(a)?.toUtc() : null;
        }(),
        whenExpire: () {
          final a = otherData?[K_WHEN_EXPIRE];
          return a != null ? DateTime.tryParse(a)?.toUtc() : null;
        }(),
      );
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelInvitationLinkDetails.fromGenericModel(
    GenericModel? other,
  ) {
    return ModelInvitationLinkDetails.fromJson(other?.data ?? {});
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final withNulls = <String, dynamic>{
        K_DEF: def?.toJson(),
        K_DEF_TYPE: defType?.name,
        K_FROM: from?.toJson(),
        K_ID: id?.toString().trim().nullIfEmpty,
        K_INVITATION_LINK: invitationLink?.toString(),
        K_STATUS: status?.name,
        K_TO: to
            ?.map(
              (final p0) => p0?.toJson(),
            )
            .nonNulls
            .nullIfEmpty
            ?.toList(),
        K_WHEN_CREATED: whenCreated?.toUtc()?.toIso8601String(),
        K_WHEN_EXPIRE: whenExpire?.toUtc()?.toIso8601String(),
      }.mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  @override
  T empty<T extends Model>() {
    return ModelInvitationLinkDetails.unsafe() as T;
  }

  //
  //
  //

  @override
  T copy<T extends Model>() {
    return (ModelInvitationLinkDetails.unsafe()..updateWith(this)) as T;
  }

  //
  //
  //

  @override
  void updateWithJson(
    Map<String, dynamic>? otherData,
  ) {
    if (otherData != null && otherData.isNotEmpty) {
      final other = ModelInvitationLinkDetails.fromJson(otherData);
      other.def != null ? this.def = other.def : null;
      other.defType != null ? this.defType = other.defType : null;
      other.from != null ? this.from = other.from : null;
      other.id != null ? this.id = other.id : null;
      other.invitationLink != null
          ? this.invitationLink = other.invitationLink
          : null;
      other.status != null ? this.status = other.status : null;
      other.to != null ? this.to = other.to : null;
      other.whenCreated != null ? this.whenCreated = other.whenCreated : null;
      other.whenExpire != null ? this.whenExpire = other.whenExpire : null;
    }
  }
}
