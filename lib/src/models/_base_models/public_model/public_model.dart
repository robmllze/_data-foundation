//.title
// ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓
//
// GENERATED BY XYZ_GENIE
// See: https://github.com/robmllze/xyz_gen
//
// ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓
//.title~

import 'dart:ui';

import '/_common.dart';

part '_public_model.g.dart';

// ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

const PUBLIC_MODEL_FIELDS = {
  ('id?', String),
  ('display_name?', String),
  ('display_name_searchable?', T_SEARCHABLE_STRING),
  ('display_color?', Color),
  ('email?', T_LOWER_CASE_STRING),
  ('created_at?', DateTime),
  ('created_by?', String),
  ('deleted_at?', DateTime),
  ('deleted_by?', String),
  ('description?', String),
  ('address_book?', Map<String, ModelAddressEntry>),
  ('email_book?', Map<String, ModelEmailEntry>),
  ('file_book?', Map<String, ModelFileEntry>),
  ('phone_book?', Map<String, ModelPhoneEntry>),
};

@GenerateModel(fields: PUBLIC_MODEL_FIELDS)
// ignore: unused_element
abstract class _PublicModel {}

// ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░

extension PublicModelExtension on PublicModel {
  //
  //
  //

  bool isIdNotEmpty() {
    return this.id != null && this.id!.isNotEmpty;
  }
  //
  //
  //

  Iterable<String>? get fileDownloadUrls {
    final a = this.sortedFilesByCreatedAt(ascending: false);
    final b = a?.map((e) => e.downloadUrl.toString());
    return b;
  }

  //
  //
  //

  String? get avatarImageDownloadUrl {
    return this.avatarImage?.downloadUrl.toString();
  }

  //
  //
  //

  ModelFileEntry? get avatarImage {
    final a = this.sortedFilesByCreatedAt(ascending: false);
    final b = a?.firstWhereOrNull((e) => e.isAvatarImage());
    return b;
  }

  //
  //
  //

  bool isUploadingFile(String fileId) {
    final a = this.fileBook?[fileId];
    final b = a != null && a.downloadUrl == null;
    return b;
  }

  //
  //
  //

  bool isUploadingAvatarImage() {
    final a = this.avatarImage;
    final b = a != null && a.downloadUrl == null;
    return b;
  }

  //
  //
  //

  Iterable<ModelFileEntry>? sortedFilesByCreatedAt({bool ascending = true}) {
    return this.fileBook?.values.toList()
      ?..sort((a, b) {
        final now = DateTime.now();
        return (ascending ? 1 : -1) * (a.createdAt ?? now).compareTo((b.createdAt ?? now));
      });
  }

  //
  //
  //

  Iterable<ModelFileEntry>? get profileFiles {
    return this.sortedFilesByCreatedAt(ascending: false)?.where((e) => e.isProfileFile());
  }
}
