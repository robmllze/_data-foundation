//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: empty_constructor_bodies
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_this

part of 'model_organization_pub.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class ModelOrganizationPub extends _ModelOrganizationPub {
  //
  //
  //

  static const K_CREATED_AT = 'created_at';
  static const K_CREATED_BY = 'created_by';
  static const K_DELETED_AT = 'deleted_at';
  static const K_DELETED_BY = 'deleted_by';
  static const K_DESCRIPTION = 'description';
  static const K_DISPLAY_NAME = 'display_name';
  static const K_DISPLAY_NAME_SEARCHABLE = 'display_name_searchable';
  static const K_ID = 'id';
  static const K_OTHER_ADDRESSES = 'other_addresses';
  static const K_OTHER_EMAILS = 'other_emails';
  static const K_OTHER_PHONES = 'other_phones';
  static const K_PRIMARY_ADDRESS = 'primary_address';
  static const K_PRIMARY_EMAIL = 'primary_email';
  static const K_PRIMARY_PHONE = 'primary_phone';
  static const K_UPLOADED_MEDIA_IDS = 'uploaded_media_ids';

  static const CLASS = 'ModelOrganizationPub';

  @override
  String get $class => CLASS;

  DateTime? _createdAt;
  String? _createdBy;
  DateTime? _deletedAt;
  String? _deletedBy;
  String? _description;
  String? _displayName;
  String? _displayNameSearchable;
  String? _id;
  List<ModelAddressEntry>? _otherAddresses;
  List<ModelEmailEntry>? _otherEmails;
  List<ModelPhoneEntry>? _otherPhones;
  ModelAddressEntry? _primaryAddress;
  ModelEmailEntry? _primaryEmail;
  ModelPhoneEntry? _primaryPhone;
  List<String>? _uploadedMediaIds;

  //
  //
  //

  ModelOrganizationPub.empty();

  //
  //
  //

  factory ModelOrganizationPub({
    required DateTime createdAt,
    required String createdBy,
    DateTime? deletedAt,
    String? deletedBy,
    String? description,
    String? displayName,
    String? displayNameSearchable,
    required String id,
    List<ModelAddressEntry>? otherAddresses,
    List<ModelEmailEntry>? otherEmails,
    List<ModelPhoneEntry>? otherPhones,
    ModelAddressEntry? primaryAddress,
    ModelEmailEntry? primaryEmail,
    ModelPhoneEntry? primaryPhone,
    List<String>? uploadedMediaIds,
  }) {
    return ModelOrganizationPub.b(
      createdAt: createdAt,
      createdBy: createdBy,
      deletedAt: deletedAt,
      deletedBy: deletedBy,
      description: description,
      displayName: displayName,
      displayNameSearchable: displayNameSearchable,
      id: id,
      otherAddresses: otherAddresses,
      otherEmails: otherEmails,
      otherPhones: otherPhones,
      primaryAddress: primaryAddress,
      primaryEmail: primaryEmail,
      primaryPhone: primaryPhone,
      uploadedMediaIds: uploadedMediaIds,
    );
  }

  //
  //
  //

  ModelOrganizationPub.b({
    DateTime? createdAt,
    String? createdBy,
    DateTime? deletedAt,
    String? deletedBy,
    String? description,
    String? displayName,
    String? displayNameSearchable,
    String? id,
    List<ModelAddressEntry>? otherAddresses,
    List<ModelEmailEntry>? otherEmails,
    List<ModelPhoneEntry>? otherPhones,
    ModelAddressEntry? primaryAddress,
    ModelEmailEntry? primaryEmail,
    ModelPhoneEntry? primaryPhone,
    List<String>? uploadedMediaIds,
  }) {
    assert(createdAt != null);
    assert(createdBy != null);
    assert(id != null);
    this._createdAt = createdAt;
    this._createdBy = createdBy;
    this._deletedAt = deletedAt;
    this._deletedBy = deletedBy;
    this._description = description;
    this._displayName = displayName;
    this._displayNameSearchable = displayNameSearchable;
    this._id = id;
    this._otherAddresses = otherAddresses;
    this._otherEmails = otherEmails;
    this._otherPhones = otherPhones;
    this._primaryAddress = primaryAddress;
    this._primaryEmail = primaryEmail;
    this._primaryPhone = primaryPhone;
    this._uploadedMediaIds = uploadedMediaIds;
  }

  //
  //
  //

  factory ModelOrganizationPub.from(
    Model? other,
  ) {
    return ModelOrganizationPub.fromJson(
      letAs<GenericModel>(other)?.data ?? other?.toJson(),
    );
  }

  //
  //
  //

  factory ModelOrganizationPub.of(
    ModelOrganizationPub? other,
  ) {
    return ModelOrganizationPub.fromJson(other?.toJson());
  }

  //
  //
  //

  factory ModelOrganizationPub.fromJsonString(
    String? source,
  ) {
    try {
      if (source != null && source.isNotEmpty) {
        final decoded = jsonDecode(source);
        return ModelOrganizationPub.fromJson(decoded);
      } else {
        return ModelOrganizationPub.empty();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelOrganizationPub.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return ModelOrganizationPub.empty()
        ..$createdAt = otherData?[K_CREATED_AT]
        ..$createdBy = otherData?[K_CREATED_BY]
        ..$deletedAt = otherData?[K_DELETED_AT]
        ..$deletedBy = otherData?[K_DELETED_BY]
        ..$description = otherData?[K_DESCRIPTION]
        ..$displayName = otherData?[K_DISPLAY_NAME]
        ..$displayNameSearchable = otherData?[K_DISPLAY_NAME_SEARCHABLE]
        ..$id = otherData?[K_ID]
        ..$otherAddresses = otherData?[K_OTHER_ADDRESSES]
        ..$otherEmails = otherData?[K_OTHER_EMAILS]
        ..$otherPhones = otherData?[K_OTHER_PHONES]
        ..$primaryAddress = otherData?[K_PRIMARY_ADDRESS]
        ..$primaryEmail = otherData?[K_PRIMARY_EMAIL]
        ..$primaryPhone = otherData?[K_PRIMARY_PHONE]
        ..$uploadedMediaIds = otherData?[K_UPLOADED_MEDIA_IDS];
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelOrganizationPub.fromUri(
    Uri? uri,
  ) {
    try {
      if (uri != null && uri.path == CLASS) {
        return ModelOrganizationPub.fromJson(uri.queryParameters);
      } else {
        return ModelOrganizationPub.b();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  static ModelOrganizationPub? convert(
    Model? other,
  ) {
    return other != null ? ModelOrganizationPub.from(other) : null;
  }

  //
  //
  //

  static ModelOrganizationPub? fromPool({
    required Iterable<ModelOrganizationPub>? pool,
    required String? id,
  }) {
    return id != null ? pool?.firstWhereOrNull((e) => e.id == id) : null;
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final withNulls = <String, dynamic>{
        K_CREATED_AT: this.$createdAt,
        K_CREATED_BY: this.$createdBy,
        K_DELETED_AT: this.$deletedAt,
        K_DELETED_BY: this.$deletedBy,
        K_DESCRIPTION: this.$description,
        K_DISPLAY_NAME: this.$displayName,
        K_DISPLAY_NAME_SEARCHABLE: this.$displayNameSearchable,
        K_ID: this.$id,
        K_OTHER_ADDRESSES: this.$otherAddresses,
        K_OTHER_EMAILS: this.$otherEmails,
        K_OTHER_PHONES: this.$otherPhones,
        K_PRIMARY_ADDRESS: this.$primaryAddress,
        K_PRIMARY_EMAIL: this.$primaryEmail,
        K_PRIMARY_PHONE: this.$primaryPhone,
        K_UPLOADED_MEDIA_IDS: this.$uploadedMediaIds,
      }.mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  @override
  T empty<T extends Model>() {
    return ModelOrganizationPub.b() as T;
  }

  //
  //
  //

  @override
  T copy<T extends Model>() {
    return (ModelOrganizationPub.b()..updateWith(this)) as T;
  }

  //
  //
  //

  @override
  void updateWithJson(
    Map<String, dynamic>? otherData,
  ) {
    if (otherData != null && otherData.isNotEmpty) {
      final other = ModelOrganizationPub.fromJson(otherData);
      if (other._createdAt != null) {
        this.createdAt = other._createdAt!;
      }
      if (other._createdBy != null) {
        this.createdBy = other._createdBy!;
      }
      if (other._deletedAt != null) {
        this.deletedAt = other._deletedAt!;
      }
      if (other._deletedBy != null) {
        this.deletedBy = other._deletedBy!;
      }
      if (other._description != null) {
        this.description = other._description!;
      }
      if (other._displayName != null) {
        this.displayName = other._displayName!;
      }
      if (other._displayNameSearchable != null) {
        this.displayNameSearchable = other._displayNameSearchable!;
      }
      if (other._id != null) {
        this.id = other._id!;
      }
      if (other._otherAddresses != null) {
        this.otherAddresses = other._otherAddresses!;
      }
      if (other._otherEmails != null) {
        this.otherEmails = other._otherEmails!;
      }
      if (other._otherPhones != null) {
        this.otherPhones = other._otherPhones!;
      }
      if (other._primaryAddress != null) {
        this.primaryAddress = other._primaryAddress!;
      }
      if (other._primaryEmail != null) {
        this.primaryEmail = other._primaryEmail!;
      }
      if (other._primaryPhone != null) {
        this.primaryPhone = other._primaryPhone!;
      }
      if (other._uploadedMediaIds != null) {
        this.uploadedMediaIds = other._uploadedMediaIds!;
      }
    }
  }

  //
  //
  //

  // createdAt.
  DateTime get createdAt => this._createdAt!;
  set createdAt(DateTime v) => this._createdAt = v;
  dynamic get $createdAt => (this._createdAt?.toUtc()?.toIso8601String())!;
  set $createdAt(v) => this._createdAt = () {
        final a = v;
        return a != null ? DateTime.tryParse(a)?.toUtc() : null;
      }();

  // createdBy.
  String get createdBy => this._createdBy!;
  set createdBy(String v) => this._createdBy = v;
  dynamic get $createdBy => (this._createdBy?.toString().trim().nullIfEmpty)!;
  set $createdBy(v) => this._createdBy = v?.toString().trim().nullIfEmpty;

  // deletedAt.
  DateTime? get deletedAt => this._deletedAt;
  set deletedAt(DateTime? v) => this._deletedAt = v;
  dynamic get $deletedAt => this._deletedAt?.toUtc()?.toIso8601String();
  set $deletedAt(v) => this._deletedAt = () {
        final a = v;
        return a != null ? DateTime.tryParse(a)?.toUtc() : null;
      }();

  // deletedBy.
  String? get deletedBy => this._deletedBy;
  set deletedBy(String? v) => this._deletedBy = v;
  dynamic get $deletedBy => this._deletedBy?.toString().trim().nullIfEmpty;
  set $deletedBy(v) => this._deletedBy = v?.toString().trim().nullIfEmpty;

  // description.
  String? get description => this._description;
  set description(String? v) => this._description = v;
  dynamic get $description => this._description?.toString().trim().nullIfEmpty;
  set $description(v) => this._description = v?.toString().trim().nullIfEmpty;

  // displayName.
  String? get displayName => this._displayName;
  set displayName(String? v) => this._displayName = v;
  dynamic get $displayName => this._displayName?.toString().trim().nullIfEmpty;
  set $displayName(v) => this._displayName = v?.toString().trim().nullIfEmpty;

  // displayNameSearchable.
  String? get displayNameSearchable => this._displayNameSearchable;
  set displayNameSearchable(String? v) => this._displayNameSearchable = v;
  dynamic get $displayNameSearchable =>
      this._displayNameSearchable?.toString().trim().nullIfEmpty;
  set $displayNameSearchable(v) =>
      this._displayNameSearchable = v?.toString().trim().nullIfEmpty;

  // id.
  String get id => this._id!;
  set id(String v) => this._id = v;
  dynamic get $id => (this._id?.toString().trim().nullIfEmpty)!;
  set $id(v) => this._id = v?.toString().trim().nullIfEmpty;

  // otherAddresses.
  List<ModelAddressEntry>? get otherAddresses => this._otherAddresses;
  set otherAddresses(List<ModelAddressEntry>? v) => this._otherAddresses = v;
  dynamic get $otherAddresses => this
      ._otherAddresses
      ?.map(
        (p0) => p0?.toJson(),
      )
      .nonNulls
      .nullIfEmpty
      ?.toList();
  set $otherAddresses(v) => this._otherAddresses = letList(v)
      ?.map(
        (p0) => () {
          final a = letMap<String, dynamic>(p0);
          return a != null ? ModelAddressEntry.fromJson(a) : null;
        }(),
      )
      .nonNulls
      .nullIfEmpty
      ?.toList()
      .cast();

  // otherEmails.
  List<ModelEmailEntry>? get otherEmails => this._otherEmails;
  set otherEmails(List<ModelEmailEntry>? v) => this._otherEmails = v;
  dynamic get $otherEmails => this
      ._otherEmails
      ?.map(
        (p0) => p0?.toJson(),
      )
      .nonNulls
      .nullIfEmpty
      ?.toList();
  set $otherEmails(v) => this._otherEmails = letList(v)
      ?.map(
        (p0) => () {
          final a = letMap<String, dynamic>(p0);
          return a != null ? ModelEmailEntry.fromJson(a) : null;
        }(),
      )
      .nonNulls
      .nullIfEmpty
      ?.toList()
      .cast();

  // otherPhones.
  List<ModelPhoneEntry>? get otherPhones => this._otherPhones;
  set otherPhones(List<ModelPhoneEntry>? v) => this._otherPhones = v;
  dynamic get $otherPhones => this
      ._otherPhones
      ?.map(
        (p0) => p0?.toJson(),
      )
      .nonNulls
      .nullIfEmpty
      ?.toList();
  set $otherPhones(v) => this._otherPhones = letList(v)
      ?.map(
        (p0) => () {
          final a = letMap<String, dynamic>(p0);
          return a != null ? ModelPhoneEntry.fromJson(a) : null;
        }(),
      )
      .nonNulls
      .nullIfEmpty
      ?.toList()
      .cast();

  // primaryAddress.
  ModelAddressEntry? get primaryAddress => this._primaryAddress;
  set primaryAddress(ModelAddressEntry? v) => this._primaryAddress = v;
  dynamic get $primaryAddress => this._primaryAddress?.toJson();
  set $primaryAddress(v) => this._primaryAddress = () {
        final a = letMap<String, dynamic>(v);
        return a != null ? ModelAddressEntry.fromJson(a) : null;
      }();

  // primaryEmail.
  ModelEmailEntry? get primaryEmail => this._primaryEmail;
  set primaryEmail(ModelEmailEntry? v) => this._primaryEmail = v;
  dynamic get $primaryEmail => this._primaryEmail?.toJson();
  set $primaryEmail(v) => this._primaryEmail = () {
        final a = letMap<String, dynamic>(v);
        return a != null ? ModelEmailEntry.fromJson(a) : null;
      }();

  // primaryPhone.
  ModelPhoneEntry? get primaryPhone => this._primaryPhone;
  set primaryPhone(ModelPhoneEntry? v) => this._primaryPhone = v;
  dynamic get $primaryPhone => this._primaryPhone?.toJson();
  set $primaryPhone(v) => this._primaryPhone = () {
        final a = letMap<String, dynamic>(v);
        return a != null ? ModelPhoneEntry.fromJson(a) : null;
      }();

  // uploadedMediaIds.
  List<String>? get uploadedMediaIds => this._uploadedMediaIds;
  set uploadedMediaIds(List<String>? v) => this._uploadedMediaIds = v;
  dynamic get $uploadedMediaIds => this
      ._uploadedMediaIds
      ?.map(
        (p0) => p0?.toString().trim().nullIfEmpty,
      )
      .nonNulls
      .nullIfEmpty
      ?.toList();
  set $uploadedMediaIds(v) => this._uploadedMediaIds = letList(v)
      ?.map(
        (p0) => p0?.toString().trim().nullIfEmpty,
      )
      .nonNulls
      .nullIfEmpty
      ?.toList()
      .cast();
}
